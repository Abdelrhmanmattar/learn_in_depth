
unit6_lesson4_atmega32.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000176  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000001ca  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000001ca  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000001fc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  00000238  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000704  00000000  00000000  00000278  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005e2  00000000  00000000  0000097c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000033e  00000000  00000000  00000f5e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000b8  00000000  00000000  0000129c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000392  00000000  00000000  00001354  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001da  00000000  00000000  000016e6  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  000018c0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 65 00 	jmp	0xca	; 0xca <__vector_1>
   8:	0c 94 81 00 	jmp	0x102	; 0x102 <__vector_2>
   c:	0c 94 9d 00 	jmp	0x13a	; 0x13a <__vector_3>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 50 00 	call	0xa0	; 0xa0 <main>
  64:	0c 94 b9 00 	jmp	0x172	; 0x172 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <external_interrupt_init>:
}

void external_interrupt_init(void)
{
	//for INT0
	set_bit(MCUCR,ISC00);
  6c:	85 b7       	in	r24, 0x35	; 53
  6e:	81 60       	ori	r24, 0x01	; 1
  70:	85 bf       	out	0x35, r24	; 53
	clear_bit(MCUCR,ISC01);
  72:	85 b7       	in	r24, 0x35	; 53
  74:	8d 7f       	andi	r24, 0xFD	; 253
  76:	85 bf       	out	0x35, r24	; 53
	set_bit(GICR,INTF0);
  78:	8b b7       	in	r24, 0x3b	; 59
  7a:	80 64       	ori	r24, 0x40	; 64
  7c:	8b bf       	out	0x3b, r24	; 59
	
	//FOR INT1
	set_bit(MCUCR,ISC10);
  7e:	85 b7       	in	r24, 0x35	; 53
  80:	84 60       	ori	r24, 0x04	; 4
  82:	85 bf       	out	0x35, r24	; 53
	set_bit(MCUCR,ISC11);
  84:	85 b7       	in	r24, 0x35	; 53
  86:	88 60       	ori	r24, 0x08	; 8
  88:	85 bf       	out	0x35, r24	; 53
	set_bit(GICR,INTF1);
  8a:	8b b7       	in	r24, 0x3b	; 59
  8c:	80 68       	ori	r24, 0x80	; 128
  8e:	8b bf       	out	0x3b, r24	; 59
	//FOR INT2
	clear_bit(MCUCSR,ISC2);
  90:	84 b7       	in	r24, 0x34	; 52
  92:	8f 7b       	andi	r24, 0xBF	; 191
  94:	84 bf       	out	0x34, r24	; 52
	set_bit(GICR,INTF2);
  96:	8b b7       	in	r24, 0x3b	; 59
  98:	80 62       	ori	r24, 0x20	; 32
  9a:	8b bf       	out	0x3b, r24	; 59
	
	sei();
  9c:	78 94       	sei
  9e:	08 95       	ret

000000a0 <main>:
void external_interrupt_init(void);

int main(void)
{
    //make all pins of external interrupt as input
    clear_bit(DDRD,2);//ANY CHANGE
  a0:	8a 98       	cbi	0x11, 2	; 17
    clear_bit(DDRD,3);//RISING EDGE
  a2:	8b 98       	cbi	0x11, 3	; 17
    clear_bit(DDRB,2);//FALLING EDGE
  a4:	ba 98       	cbi	0x17, 2	; 23

    //make led pins as output leds (PD5,6,7)
    set_bit(DDRD,5);
  a6:	8d 9a       	sbi	0x11, 5	; 17
    set_bit(DDRD,6);
  a8:	8e 9a       	sbi	0x11, 6	; 17
    set_bit(DDRD,7);
  aa:	8f 9a       	sbi	0x11, 7	; 17
	external_interrupt_init();
  ac:	0e 94 36 00 	call	0x6c	; 0x6c <external_interrupt_init>
    /* Replace with your application code */
    while (1) 
    {
        //turn off all leds
        clear_bit(PORTD,5);
  b0:	95 98       	cbi	0x12, 5	; 18
        clear_bit(PORTD,6);
  b2:	96 98       	cbi	0x12, 6	; 18
        clear_bit(PORTD,7);
  b4:	97 98       	cbi	0x12, 7	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  b6:	2f ef       	ldi	r18, 0xFF	; 255
  b8:	89 e6       	ldi	r24, 0x69	; 105
  ba:	98 e1       	ldi	r25, 0x18	; 24
  bc:	21 50       	subi	r18, 0x01	; 1
  be:	80 40       	sbci	r24, 0x00	; 0
  c0:	90 40       	sbci	r25, 0x00	; 0
  c2:	e1 f7       	brne	.-8      	; 0xbc <main+0x1c>
  c4:	00 c0       	rjmp	.+0      	; 0xc6 <main+0x26>
  c6:	00 00       	nop
  c8:	f3 cf       	rjmp	.-26     	; 0xb0 <main+0x10>

000000ca <__vector_1>:
}

//ISRs for external interrupts

ISR(INT0_vect)
{
  ca:	1f 92       	push	r1
  cc:	0f 92       	push	r0
  ce:	0f b6       	in	r0, 0x3f	; 63
  d0:	0f 92       	push	r0
  d2:	11 24       	eor	r1, r1
  d4:	2f 93       	push	r18
  d6:	8f 93       	push	r24
  d8:	9f 93       	push	r25
    //turn on led connected to PD5
    set_bit(PIND,5);
  da:	85 9a       	sbi	0x10, 5	; 16
	PORTA=5;
  dc:	85 e0       	ldi	r24, 0x05	; 5
  de:	8b bb       	out	0x1b, r24	; 27
  e0:	2f ef       	ldi	r18, 0xFF	; 255
  e2:	89 e6       	ldi	r24, 0x69	; 105
  e4:	98 e1       	ldi	r25, 0x18	; 24
  e6:	21 50       	subi	r18, 0x01	; 1
  e8:	80 40       	sbci	r24, 0x00	; 0
  ea:	90 40       	sbci	r25, 0x00	; 0
  ec:	e1 f7       	brne	.-8      	; 0xe6 <__vector_1+0x1c>
  ee:	00 c0       	rjmp	.+0      	; 0xf0 <__vector_1+0x26>
  f0:	00 00       	nop
    _delay_ms(1000);
}
  f2:	9f 91       	pop	r25
  f4:	8f 91       	pop	r24
  f6:	2f 91       	pop	r18
  f8:	0f 90       	pop	r0
  fa:	0f be       	out	0x3f, r0	; 63
  fc:	0f 90       	pop	r0
  fe:	1f 90       	pop	r1
 100:	18 95       	reti

00000102 <__vector_2>:

ISR(INT1_vect)
{
 102:	1f 92       	push	r1
 104:	0f 92       	push	r0
 106:	0f b6       	in	r0, 0x3f	; 63
 108:	0f 92       	push	r0
 10a:	11 24       	eor	r1, r1
 10c:	2f 93       	push	r18
 10e:	8f 93       	push	r24
 110:	9f 93       	push	r25
    //turn on led connected to PD6
    set_bit(PIND,6);
 112:	86 9a       	sbi	0x10, 6	; 16
	PORTA=6;
 114:	86 e0       	ldi	r24, 0x06	; 6
 116:	8b bb       	out	0x1b, r24	; 27
 118:	2f ef       	ldi	r18, 0xFF	; 255
 11a:	89 e6       	ldi	r24, 0x69	; 105
 11c:	98 e1       	ldi	r25, 0x18	; 24
 11e:	21 50       	subi	r18, 0x01	; 1
 120:	80 40       	sbci	r24, 0x00	; 0
 122:	90 40       	sbci	r25, 0x00	; 0
 124:	e1 f7       	brne	.-8      	; 0x11e <__vector_2+0x1c>
 126:	00 c0       	rjmp	.+0      	; 0x128 <__vector_2+0x26>
 128:	00 00       	nop
    _delay_ms(1000);
}
 12a:	9f 91       	pop	r25
 12c:	8f 91       	pop	r24
 12e:	2f 91       	pop	r18
 130:	0f 90       	pop	r0
 132:	0f be       	out	0x3f, r0	; 63
 134:	0f 90       	pop	r0
 136:	1f 90       	pop	r1
 138:	18 95       	reti

0000013a <__vector_3>:

ISR(INT2_vect)
{
 13a:	1f 92       	push	r1
 13c:	0f 92       	push	r0
 13e:	0f b6       	in	r0, 0x3f	; 63
 140:	0f 92       	push	r0
 142:	11 24       	eor	r1, r1
 144:	2f 93       	push	r18
 146:	8f 93       	push	r24
 148:	9f 93       	push	r25
    //turn on led connected to PD7
    set_bit(PIND,7);
 14a:	87 9a       	sbi	0x10, 7	; 16
	PORTA=7;
 14c:	87 e0       	ldi	r24, 0x07	; 7
 14e:	8b bb       	out	0x1b, r24	; 27
 150:	2f ef       	ldi	r18, 0xFF	; 255
 152:	89 e6       	ldi	r24, 0x69	; 105
 154:	98 e1       	ldi	r25, 0x18	; 24
 156:	21 50       	subi	r18, 0x01	; 1
 158:	80 40       	sbci	r24, 0x00	; 0
 15a:	90 40       	sbci	r25, 0x00	; 0
 15c:	e1 f7       	brne	.-8      	; 0x156 <__vector_3+0x1c>
 15e:	00 c0       	rjmp	.+0      	; 0x160 <__vector_3+0x26>
 160:	00 00       	nop
    _delay_ms(1000);
}
 162:	9f 91       	pop	r25
 164:	8f 91       	pop	r24
 166:	2f 91       	pop	r18
 168:	0f 90       	pop	r0
 16a:	0f be       	out	0x3f, r0	; 63
 16c:	0f 90       	pop	r0
 16e:	1f 90       	pop	r1
 170:	18 95       	reti

00000172 <_exit>:
 172:	f8 94       	cli

00000174 <__stop_program>:
 174:	ff cf       	rjmp	.-2      	; 0x174 <__stop_program>
