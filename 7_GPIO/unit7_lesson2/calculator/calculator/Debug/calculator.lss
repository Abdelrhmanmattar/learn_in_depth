
calculator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000013ae  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000026  00800060  000013ae  00001422  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      0000005c  00000000  00000000  00001448  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000014a4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000a0  00000000  00000000  000014e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000f07  00000000  00000000  00001580  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000885  00000000  00000000  00002487  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000888  00000000  00000000  00002d0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001b8  00000000  00000000  00003594  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000498  00000000  00000000  0000374c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000d63  00000000  00000000  00003be4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000070  00000000  00000000  00004947  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__ctors_end>
       4:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
       8:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
       c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
      10:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
      14:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
      18:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
      1c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
      20:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
      24:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
      28:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
      2c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
      30:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
      34:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
      38:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
      3c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
      40:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
      44:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
      48:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
      4c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
      50:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
      54:	07 63       	ori	r16, 0x37	; 55
      56:	42 36       	cpi	r20, 0x62	; 98
      58:	b7 9b       	sbis	0x16, 7	; 22
      5a:	d8 a7       	std	Y+40, r29	; 0x28
      5c:	1a 39       	cpi	r17, 0x9A	; 154
      5e:	68 56       	subi	r22, 0x68	; 104
      60:	18 ae       	std	Y+56, r1	; 0x38
      62:	ba ab       	std	Y+50, r27	; 0x32
      64:	55 8c       	ldd	r5, Z+29	; 0x1d
      66:	1d 3c       	cpi	r17, 0xCD	; 205
      68:	b7 cc       	rjmp	.-1682   	; 0xfffff9d8 <__eeprom_end+0xff7ef9d8>
      6a:	57 63       	ori	r21, 0x37	; 55
      6c:	bd 6d       	ori	r27, 0xDD	; 221
      6e:	ed fd       	.word	0xfded	; ????
      70:	75 3e       	cpi	r23, 0xE5	; 229
      72:	f6 17       	cp	r31, r22
      74:	72 31       	cpi	r23, 0x12	; 18
      76:	bf 00       	.word	0x00bf	; ????
      78:	00 00       	nop
      7a:	80 3f       	cpi	r24, 0xF0	; 240
      7c:	08 00       	.word	0x0008	; ????
      7e:	00 00       	nop
      80:	be 92       	st	-X, r11
      82:	24 49       	sbci	r18, 0x94	; 148
      84:	12 3e       	cpi	r17, 0xE2	; 226
      86:	ab aa       	std	Y+51, r10	; 0x33
      88:	aa 2a       	or	r10, r26
      8a:	be cd       	rjmp	.-1156   	; 0xfffffc08 <__eeprom_end+0xff7efc08>
      8c:	cc cc       	rjmp	.-1640   	; 0xfffffa26 <__eeprom_end+0xff7efa26>
      8e:	4c 3e       	cpi	r20, 0xEC	; 236
      90:	00 00       	nop
      92:	00 80       	ld	r0, Z
      94:	be ab       	std	Y+54, r27	; 0x36
      96:	aa aa       	std	Y+50, r10	; 0x32
      98:	aa 3e       	cpi	r26, 0xEA	; 234
      9a:	00 00       	nop
      9c:	00 00       	nop
      9e:	bf 00       	.word	0x00bf	; ????
      a0:	00 00       	nop
      a2:	80 3f       	cpi	r24, 0xF0	; 240
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	00 08       	sbc	r0, r0
      aa:	41 78       	andi	r20, 0x81	; 129
      ac:	d3 bb       	out	0x13, r29	; 19
      ae:	43 87       	std	Z+11, r20	; 0x0b
      b0:	d1 13       	cpse	r29, r17
      b2:	3d 19       	sub	r19, r13
      b4:	0e 3c       	cpi	r16, 0xCE	; 206
      b6:	c3 bd       	out	0x23, r28	; 35
      b8:	42 82       	std	Z+2, r4	; 0x02
      ba:	ad 2b       	or	r26, r29
      bc:	3e 68       	ori	r19, 0x8E	; 142
      be:	ec 82       	std	Y+4, r14	; 0x04
      c0:	76 be       	out	0x36, r7	; 54
      c2:	d9 8f       	std	Y+25, r29	; 0x19
      c4:	e1 a9       	ldd	r30, Z+49	; 0x31
      c6:	3e 4c       	sbci	r19, 0xCE	; 206
      c8:	80 ef       	ldi	r24, 0xF0	; 240
      ca:	ff be       	out	0x3f, r15	; 63
      cc:	01 c4       	rjmp	.+2050   	; 0x8d0 <__fixunssfsi+0x58>
      ce:	ff 7f       	andi	r31, 0xFF	; 255
      d0:	3f 00       	.word	0x003f	; ????
      d2:	00 00       	nop
	...

000000d6 <__ctors_end>:
      d6:	11 24       	eor	r1, r1
      d8:	1f be       	out	0x3f, r1	; 63
      da:	cf e5       	ldi	r28, 0x5F	; 95
      dc:	d8 e0       	ldi	r29, 0x08	; 8
      de:	de bf       	out	0x3e, r29	; 62
      e0:	cd bf       	out	0x3d, r28	; 61

000000e2 <__do_copy_data>:
      e2:	10 e0       	ldi	r17, 0x00	; 0
      e4:	a0 e6       	ldi	r26, 0x60	; 96
      e6:	b0 e0       	ldi	r27, 0x00	; 0
      e8:	ee ea       	ldi	r30, 0xAE	; 174
      ea:	f3 e1       	ldi	r31, 0x13	; 19
      ec:	02 c0       	rjmp	.+4      	; 0xf2 <__do_copy_data+0x10>
      ee:	05 90       	lpm	r0, Z+
      f0:	0d 92       	st	X+, r0
      f2:	a6 38       	cpi	r26, 0x86	; 134
      f4:	b1 07       	cpc	r27, r17
      f6:	d9 f7       	brne	.-10     	; 0xee <__do_copy_data+0xc>
      f8:	0e 94 4d 02 	call	0x49a	; 0x49a <main>
      fc:	0c 94 d5 09 	jmp	0x13aa	; 0x13aa <_exit>

00000100 <__bad_interrupt>:
     100:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000104 <keypad_vInit>:
 #include "keypad_driver.h"
 void keypad_vInit()
 {
	//set port inputs and output pins
	 KEY_PAD_DDR  = 0x0f;
     104:	8f e0       	ldi	r24, 0x0F	; 15
     106:	81 bb       	out	0x11, r24	; 17
	 KEY_PAD_PORT = 0xf0;	  
     108:	80 ef       	ldi	r24, 0xF0	; 240
     10a:	82 bb       	out	0x12, r24	; 18
     10c:	08 95       	ret

0000010e <keypad_u8check_press>:
 }
 char keypad_u8check_press()
 {
     10e:	0f 93       	push	r16
     110:	1f 93       	push	r17
     112:	cf 93       	push	r28
     114:	df 93       	push	r29
     116:	cd b7       	in	r28, 0x3d	; 61
     118:	de b7       	in	r29, 0x3e	; 62
     11a:	60 97       	sbiw	r28, 0x10	; 16
     11c:	0f b6       	in	r0, 0x3f	; 63
     11e:	f8 94       	cli
     120:	de bf       	out	0x3e, r29	; 62
     122:	0f be       	out	0x3f, r0	; 63
     124:	cd bf       	out	0x3d, r28	; 61
	 char arr[4][4]={{'7','8','9','/'},{'4','5','6','*'},{'1','2','3','-'},{'A','0','=','+'}};
     126:	80 e1       	ldi	r24, 0x10	; 16
     128:	e0 e6       	ldi	r30, 0x60	; 96
     12a:	f0 e0       	ldi	r31, 0x00	; 0
     12c:	de 01       	movw	r26, r28
     12e:	11 96       	adiw	r26, 0x01	; 1
     130:	01 90       	ld	r0, Z+
     132:	0d 92       	st	X+, r0
     134:	8a 95       	dec	r24
     136:	e1 f7       	brne	.-8      	; 0x130 <keypad_u8check_press+0x22>
	 char row,coloumn,x;
	 char returnval=NOTPRESSED;
     138:	8f ef       	ldi	r24, 0xFF	; 255
	 for(row=0;row<4;row++)
     13a:	70 e0       	ldi	r23, 0x00	; 0
     13c:	41 c0       	rjmp	.+130    	; 0x1c0 <keypad_u8check_press+0xb2>
	 {
		 KEY_PAD_PORT |=0X0F;
     13e:	92 b3       	in	r25, 0x12	; 18
     140:	9f 60       	ori	r25, 0x0F	; 15
     142:	92 bb       	out	0x12, r25	; 18
		 CLR_BIT(KEY_PAD_PORT,row);
     144:	92 b3       	in	r25, 0x12	; 18
     146:	a7 2f       	mov	r26, r23
     148:	b0 e0       	ldi	r27, 0x00	; 0
     14a:	41 e0       	ldi	r20, 0x01	; 1
     14c:	50 e0       	ldi	r21, 0x00	; 0
     14e:	07 2e       	mov	r0, r23
     150:	02 c0       	rjmp	.+4      	; 0x156 <keypad_u8check_press+0x48>
     152:	44 0f       	add	r20, r20
     154:	55 1f       	adc	r21, r21
     156:	0a 94       	dec	r0
     158:	e2 f7       	brpl	.-8      	; 0x152 <keypad_u8check_press+0x44>
     15a:	40 95       	com	r20
     15c:	49 23       	and	r20, r25
     15e:	42 bb       	out	0x12, r20	; 18
		 
		 for(coloumn=0;coloumn<4;coloumn++)
     160:	90 e0       	ldi	r25, 0x00	; 0
     162:	29 c0       	rjmp	.+82     	; 0x1b6 <keypad_u8check_press+0xa8>
		 {
			 x=READ_BIT(KEY_PAD_PIN,(coloumn+4));
     164:	60 b3       	in	r22, 0x10	; 16
     166:	e9 2f       	mov	r30, r25
     168:	f0 e0       	ldi	r31, 0x00	; 0
     16a:	8f 01       	movw	r16, r30
     16c:	0c 5f       	subi	r16, 0xFC	; 252
     16e:	1f 4f       	sbci	r17, 0xFF	; 255
     170:	21 e0       	ldi	r18, 0x01	; 1
     172:	30 e0       	ldi	r19, 0x00	; 0
     174:	a9 01       	movw	r20, r18
     176:	00 2e       	mov	r0, r16
     178:	02 c0       	rjmp	.+4      	; 0x17e <keypad_u8check_press+0x70>
     17a:	44 0f       	add	r20, r20
     17c:	55 1f       	adc	r21, r21
     17e:	0a 94       	dec	r0
     180:	e2 f7       	brpl	.-8      	; 0x17a <keypad_u8check_press+0x6c>
     182:	26 2f       	mov	r18, r22
     184:	30 e0       	ldi	r19, 0x00	; 0
     186:	24 23       	and	r18, r20
     188:	35 23       	and	r19, r21
     18a:	02 c0       	rjmp	.+4      	; 0x190 <keypad_u8check_press+0x82>
     18c:	35 95       	asr	r19
     18e:	27 95       	ror	r18
     190:	0a 95       	dec	r16
     192:	e2 f7       	brpl	.-8      	; 0x18c <keypad_u8check_press+0x7e>
			 if(x==0)
     194:	21 11       	cpse	r18, r1
     196:	0e c0       	rjmp	.+28     	; 0x1b4 <keypad_u8check_press+0xa6>
			 {
				 returnval=arr[row][coloumn];
     198:	aa 0f       	add	r26, r26
     19a:	bb 1f       	adc	r27, r27
     19c:	aa 0f       	add	r26, r26
     19e:	bb 1f       	adc	r27, r27
     1a0:	81 e0       	ldi	r24, 0x01	; 1
     1a2:	90 e0       	ldi	r25, 0x00	; 0
     1a4:	8c 0f       	add	r24, r28
     1a6:	9d 1f       	adc	r25, r29
     1a8:	a8 0f       	add	r26, r24
     1aa:	b9 1f       	adc	r27, r25
     1ac:	ea 0f       	add	r30, r26
     1ae:	fb 1f       	adc	r31, r27
     1b0:	80 81       	ld	r24, Z
				 break;
     1b2:	03 c0       	rjmp	.+6      	; 0x1ba <keypad_u8check_press+0xac>
	 for(row=0;row<4;row++)
	 {
		 KEY_PAD_PORT |=0X0F;
		 CLR_BIT(KEY_PAD_PORT,row);
		 
		 for(coloumn=0;coloumn<4;coloumn++)
     1b4:	9f 5f       	subi	r25, 0xFF	; 255
     1b6:	94 30       	cpi	r25, 0x04	; 4
     1b8:	a8 f2       	brcs	.-86     	; 0x164 <keypad_u8check_press+0x56>
			 {
				 returnval=arr[row][coloumn];
				 break;
			 }
		 }
		 if(x==0)
     1ba:	22 23       	and	r18, r18
     1bc:	21 f0       	breq	.+8      	; 0x1c6 <keypad_u8check_press+0xb8>
 char keypad_u8check_press()
 {
	 char arr[4][4]={{'7','8','9','/'},{'4','5','6','*'},{'1','2','3','-'},{'A','0','=','+'}};
	 char row,coloumn,x;
	 char returnval=NOTPRESSED;
	 for(row=0;row<4;row++)
     1be:	7f 5f       	subi	r23, 0xFF	; 255
     1c0:	74 30       	cpi	r23, 0x04	; 4
     1c2:	08 f4       	brcc	.+2      	; 0x1c6 <keypad_u8check_press+0xb8>
     1c4:	bc cf       	rjmp	.-136    	; 0x13e <keypad_u8check_press+0x30>
			 break;
		 }
	 }

	 return returnval ;	 
     1c6:	60 96       	adiw	r28, 0x10	; 16
     1c8:	0f b6       	in	r0, 0x3f	; 63
     1ca:	f8 94       	cli
     1cc:	de bf       	out	0x3e, r29	; 62
     1ce:	0f be       	out	0x3f, r0	; 63
     1d0:	cd bf       	out	0x3d, r28	; 61
     1d2:	df 91       	pop	r29
     1d4:	cf 91       	pop	r28
     1d6:	1f 91       	pop	r17
     1d8:	0f 91       	pop	r16
     1da:	08 95       	ret

000001dc <enable>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1dc:	88 b3       	in	r24, 0x18	; 24
     1de:	88 60       	ori	r24, 0x08	; 8
     1e0:	88 bb       	out	0x18, r24	; 24
     1e2:	8f e4       	ldi	r24, 0x4F	; 79
     1e4:	93 ec       	ldi	r25, 0xC3	; 195
     1e6:	01 97       	sbiw	r24, 0x01	; 1
     1e8:	f1 f7       	brne	.-4      	; 0x1e6 <enable+0xa>
     1ea:	00 c0       	rjmp	.+0      	; 0x1ec <enable+0x10>
     1ec:	00 00       	nop
     1ee:	88 b3       	in	r24, 0x18	; 24
     1f0:	87 7f       	andi	r24, 0xF7	; 247
     1f2:	88 bb       	out	0x18, r24	; 24
     1f4:	8f e4       	ldi	r24, 0x4F	; 79
     1f6:	93 ec       	ldi	r25, 0xC3	; 195
     1f8:	01 97       	sbiw	r24, 0x01	; 1
     1fa:	f1 f7       	brne	.-4      	; 0x1f8 <enable+0x1c>
     1fc:	00 c0       	rjmp	.+0      	; 0x1fe <enable+0x22>
     1fe:	00 00       	nop
     200:	08 95       	ret

00000202 <lcd_cmd>:
     202:	cf 93       	push	r28
     204:	c8 2f       	mov	r28, r24
     206:	88 b3       	in	r24, 0x18	; 24
     208:	8d 7f       	andi	r24, 0xFD	; 253
     20a:	88 bb       	out	0x18, r24	; 24
     20c:	88 b3       	in	r24, 0x18	; 24
     20e:	8b 7f       	andi	r24, 0xFB	; 251
     210:	88 bb       	out	0x18, r24	; 24
     212:	8b b3       	in	r24, 0x1b	; 27
     214:	8f 70       	andi	r24, 0x0F	; 15
     216:	8b bb       	out	0x1b, r24	; 27
     218:	8b b3       	in	r24, 0x1b	; 27
     21a:	9c 2f       	mov	r25, r28
     21c:	90 7f       	andi	r25, 0xF0	; 240
     21e:	89 2b       	or	r24, r25
     220:	8b bb       	out	0x1b, r24	; 27
     222:	0e 94 ee 00 	call	0x1dc	; 0x1dc <enable>
     226:	8b b3       	in	r24, 0x1b	; 27
     228:	8f 70       	andi	r24, 0x0F	; 15
     22a:	8b bb       	out	0x1b, r24	; 27
     22c:	2b b3       	in	r18, 0x1b	; 27
     22e:	30 e1       	ldi	r19, 0x10	; 16
     230:	c3 9f       	mul	r28, r19
     232:	c0 01       	movw	r24, r0
     234:	11 24       	eor	r1, r1
     236:	82 2b       	or	r24, r18
     238:	8b bb       	out	0x1b, r24	; 27
     23a:	0e 94 ee 00 	call	0x1dc	; 0x1dc <enable>
     23e:	8f e5       	ldi	r24, 0x5F	; 95
     240:	9a ee       	ldi	r25, 0xEA	; 234
     242:	01 97       	sbiw	r24, 0x01	; 1
     244:	f1 f7       	brne	.-4      	; 0x242 <lcd_cmd+0x40>
     246:	00 c0       	rjmp	.+0      	; 0x248 <lcd_cmd+0x46>
     248:	00 00       	nop
     24a:	cf 91       	pop	r28
     24c:	08 95       	ret

0000024e <lcd_init>:
     24e:	2f ef       	ldi	r18, 0xFF	; 255
     250:	81 ee       	ldi	r24, 0xE1	; 225
     252:	94 e0       	ldi	r25, 0x04	; 4
     254:	21 50       	subi	r18, 0x01	; 1
     256:	80 40       	sbci	r24, 0x00	; 0
     258:	90 40       	sbci	r25, 0x00	; 0
     25a:	e1 f7       	brne	.-8      	; 0x254 <lcd_init+0x6>
     25c:	00 c0       	rjmp	.+0      	; 0x25e <lcd_init+0x10>
     25e:	00 00       	nop
     260:	87 b3       	in	r24, 0x17	; 23
     262:	82 60       	ori	r24, 0x02	; 2
     264:	87 bb       	out	0x17, r24	; 23
     266:	87 b3       	in	r24, 0x17	; 23
     268:	84 60       	ori	r24, 0x04	; 4
     26a:	87 bb       	out	0x17, r24	; 23
     26c:	87 b3       	in	r24, 0x17	; 23
     26e:	88 60       	ori	r24, 0x08	; 8
     270:	87 bb       	out	0x17, r24	; 23
     272:	88 b3       	in	r24, 0x18	; 24
     274:	8d 7f       	andi	r24, 0xFD	; 253
     276:	88 bb       	out	0x18, r24	; 24
     278:	88 b3       	in	r24, 0x18	; 24
     27a:	8b 7f       	andi	r24, 0xFB	; 251
     27c:	88 bb       	out	0x18, r24	; 24
     27e:	8f ef       	ldi	r24, 0xFF	; 255
     280:	8a bb       	out	0x1a, r24	; 26
     282:	82 e0       	ldi	r24, 0x02	; 2
     284:	0e 94 01 01 	call	0x202	; 0x202 <lcd_cmd>
     288:	88 e2       	ldi	r24, 0x28	; 40
     28a:	0e 94 01 01 	call	0x202	; 0x202 <lcd_cmd>
     28e:	86 e0       	ldi	r24, 0x06	; 6
     290:	0e 94 01 01 	call	0x202	; 0x202 <lcd_cmd>
     294:	80 e8       	ldi	r24, 0x80	; 128
     296:	0e 94 01 01 	call	0x202	; 0x202 <lcd_cmd>
     29a:	8f e0       	ldi	r24, 0x0F	; 15
     29c:	0e 94 01 01 	call	0x202	; 0x202 <lcd_cmd>
     2a0:	81 e0       	ldi	r24, 0x01	; 1
     2a2:	0e 94 01 01 	call	0x202	; 0x202 <lcd_cmd>
     2a6:	08 95       	ret

000002a8 <lcd_char>:
	}
	lcd_cmd(data);
	_delay_ms(1);
}
void lcd_char(char data)
{
     2a8:	cf 93       	push	r28
     2aa:	c8 2f       	mov	r28, r24
	SET_BIT(LCD_CONTROL_PORT,RS_PIN);
     2ac:	88 b3       	in	r24, 0x18	; 24
     2ae:	82 60       	ori	r24, 0x02	; 2
     2b0:	88 bb       	out	0x18, r24	; 24
	CLR_BIT(LCD_CONTROL_PORT,RW_PIN);
     2b2:	88 b3       	in	r24, 0x18	; 24
     2b4:	8b 7f       	andi	r24, 0xFB	; 251
     2b6:	88 bb       	out	0x18, r24	; 24
	#if defined EIGHT_BIT_MODE
	LCD_DATA_PORT=data;
	enable();
	#elif defined FOUR_BIT_MODE
	LCD_DATA_PORT &=(0X0f);
     2b8:	8b b3       	in	r24, 0x1b	; 27
     2ba:	8f 70       	andi	r24, 0x0F	; 15
     2bc:	8b bb       	out	0x1b, r24	; 27
	LCD_DATA_PORT |=(data & 0xf0);
     2be:	8b b3       	in	r24, 0x1b	; 27
     2c0:	9c 2f       	mov	r25, r28
     2c2:	90 7f       	andi	r25, 0xF0	; 240
     2c4:	89 2b       	or	r24, r25
     2c6:	8b bb       	out	0x1b, r24	; 27
	enable();
     2c8:	0e 94 ee 00 	call	0x1dc	; 0x1dc <enable>
	LCD_DATA_PORT &=(0X0F);
     2cc:	8b b3       	in	r24, 0x1b	; 27
     2ce:	8f 70       	andi	r24, 0x0F	; 15
     2d0:	8b bb       	out	0x1b, r24	; 27
	LCD_DATA_PORT |=(data << 4);
     2d2:	2b b3       	in	r18, 0x1b	; 27
     2d4:	30 e1       	ldi	r19, 0x10	; 16
     2d6:	c3 9f       	mul	r28, r19
     2d8:	c0 01       	movw	r24, r0
     2da:	11 24       	eor	r1, r1
     2dc:	82 2b       	or	r24, r18
     2de:	8b bb       	out	0x1b, r24	; 27
	enable();
     2e0:	0e 94 ee 00 	call	0x1dc	; 0x1dc <enable>
     2e4:	8f e5       	ldi	r24, 0x5F	; 95
     2e6:	9a ee       	ldi	r25, 0xEA	; 234
     2e8:	01 97       	sbiw	r24, 0x01	; 1
     2ea:	f1 f7       	brne	.-4      	; 0x2e8 <lcd_char+0x40>
     2ec:	00 c0       	rjmp	.+0      	; 0x2ee <lcd_char+0x46>
     2ee:	00 00       	nop
	#endif
	
	_delay_ms(30);
}
     2f0:	cf 91       	pop	r28
     2f2:	08 95       	ret

000002f4 <lcd_string>:
void lcd_string(char * data)
{
     2f4:	cf 93       	push	r28
     2f6:	df 93       	push	r29
     2f8:	ec 01       	movw	r28, r24
	
	while(*data != '\0')
     2fa:	03 c0       	rjmp	.+6      	; 0x302 <lcd_string+0xe>
	{
		lcd_char(*data);
     2fc:	0e 94 54 01 	call	0x2a8	; 0x2a8 <lcd_char>
		data++;
     300:	21 96       	adiw	r28, 0x01	; 1
	_delay_ms(30);
}
void lcd_string(char * data)
{
	
	while(*data != '\0')
     302:	88 81       	ld	r24, Y
     304:	81 11       	cpse	r24, r1
     306:	fa cf       	rjmp	.-12     	; 0x2fc <lcd_string+0x8>
	{
		lcd_char(*data);
		data++;
	}
}
     308:	df 91       	pop	r29
     30a:	cf 91       	pop	r28
     30c:	08 95       	ret

0000030e <calc>:
    OPERATION_DIV = '/',
}operation_t;

//-----------------FUNCTIONS PROTOTYPES-------------------
double calc(uint32_t num1, uint32_t num2, operation_t operation)
{
     30e:	8f 92       	push	r8
     310:	9f 92       	push	r9
     312:	af 92       	push	r10
     314:	bf 92       	push	r11
     316:	cf 92       	push	r12
     318:	df 92       	push	r13
     31a:	ef 92       	push	r14
     31c:	ff 92       	push	r15
     31e:	0f 93       	push	r16
     320:	69 01       	movw	r12, r18
     322:	7a 01       	movw	r14, r20
    double result = 0;
	
    switch(operation)
     324:	0b 32       	cpi	r16, 0x2B	; 43
     326:	49 f0       	breq	.+18     	; 0x33a <calc+0x2c>
     328:	18 f4       	brcc	.+6      	; 0x330 <calc+0x22>
     32a:	0a 32       	cpi	r16, 0x2A	; 42
     32c:	21 f1       	breq	.+72     	; 0x376 <calc+0x68>
     32e:	45 c0       	rjmp	.+138    	; 0x3ba <calc+0xac>
     330:	0d 32       	cpi	r16, 0x2D	; 45
     332:	91 f0       	breq	.+36     	; 0x358 <calc+0x4a>
     334:	0f 32       	cpi	r16, 0x2F	; 47
     336:	71 f1       	breq	.+92     	; 0x394 <calc+0x86>
     338:	40 c0       	rjmp	.+128    	; 0x3ba <calc+0xac>
    {
        case OPERATION_ADD:
        {
            result = (double)num1 + (double)num2;
     33a:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <__floatunsisf>
     33e:	4b 01       	movw	r8, r22
     340:	5c 01       	movw	r10, r24
     342:	c7 01       	movw	r24, r14
     344:	b6 01       	movw	r22, r12
     346:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <__floatunsisf>
     34a:	9b 01       	movw	r18, r22
     34c:	ac 01       	movw	r20, r24
     34e:	c5 01       	movw	r24, r10
     350:	b4 01       	movw	r22, r8
     352:	0e 94 57 03 	call	0x6ae	; 0x6ae <__addsf3>
            break;
     356:	38 c0       	rjmp	.+112    	; 0x3c8 <calc+0xba>
        }
        case OPERATION_SUB:
        {
            result = (double)num1 - (double)num2;
     358:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <__floatunsisf>
     35c:	4b 01       	movw	r8, r22
     35e:	5c 01       	movw	r10, r24
     360:	c7 01       	movw	r24, r14
     362:	b6 01       	movw	r22, r12
     364:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <__floatunsisf>
     368:	9b 01       	movw	r18, r22
     36a:	ac 01       	movw	r20, r24
     36c:	c5 01       	movw	r24, r10
     36e:	b4 01       	movw	r22, r8
     370:	0e 94 56 03 	call	0x6ac	; 0x6ac <__subsf3>
            break;
     374:	29 c0       	rjmp	.+82     	; 0x3c8 <calc+0xba>
        }
        case OPERATION_MUL:
        {
            result = (double)num1 * (double)num2;
     376:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <__floatunsisf>
     37a:	4b 01       	movw	r8, r22
     37c:	5c 01       	movw	r10, r24
     37e:	c7 01       	movw	r24, r14
     380:	b6 01       	movw	r22, r12
     382:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <__floatunsisf>
     386:	9b 01       	movw	r18, r22
     388:	ac 01       	movw	r20, r24
     38a:	c5 01       	movw	r24, r10
     38c:	b4 01       	movw	r22, r8
     38e:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <__mulsf3>
            break;
     392:	1a c0       	rjmp	.+52     	; 0x3c8 <calc+0xba>
        }
        case OPERATION_DIV:
        {
            if(num2 != 0)
     394:	23 2b       	or	r18, r19
     396:	24 2b       	or	r18, r20
     398:	25 2b       	or	r18, r21
     39a:	99 f0       	breq	.+38     	; 0x3c2 <calc+0xb4>
            {
                result = (double)num1 / (double)num2;
     39c:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <__floatunsisf>
     3a0:	4b 01       	movw	r8, r22
     3a2:	5c 01       	movw	r10, r24
     3a4:	c7 01       	movw	r24, r14
     3a6:	b6 01       	movw	r22, r12
     3a8:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <__floatunsisf>
     3ac:	9b 01       	movw	r18, r22
     3ae:	ac 01       	movw	r20, r24
     3b0:	c5 01       	movw	r24, r10
     3b2:	b4 01       	movw	r22, r8
     3b4:	0e 94 c3 03 	call	0x786	; 0x786 <__divsf3>
     3b8:	07 c0       	rjmp	.+14     	; 0x3c8 <calc+0xba>
            }
            break;
        }
        default:
        {
            result = 0;
     3ba:	60 e0       	ldi	r22, 0x00	; 0
     3bc:	70 e0       	ldi	r23, 0x00	; 0
     3be:	cb 01       	movw	r24, r22
     3c0:	03 c0       	rjmp	.+6      	; 0x3c8 <calc+0xba>
            {
                result = (double)num1 / (double)num2;
            }
            else
            {
                result = 0;
     3c2:	60 e0       	ldi	r22, 0x00	; 0
     3c4:	70 e0       	ldi	r23, 0x00	; 0
     3c6:	cb 01       	movw	r24, r22
            break;
        }
    }
    return result;

}
     3c8:	0f 91       	pop	r16
     3ca:	ff 90       	pop	r15
     3cc:	ef 90       	pop	r14
     3ce:	df 90       	pop	r13
     3d0:	cf 90       	pop	r12
     3d2:	bf 90       	pop	r11
     3d4:	af 90       	pop	r10
     3d6:	9f 90       	pop	r9
     3d8:	8f 90       	pop	r8
     3da:	08 95       	ret

000003dc <double_to_string>:



//function to convert double to string
void double_to_string(char* str,double num, uint8_t precision)
{
     3dc:	8f 92       	push	r8
     3de:	9f 92       	push	r9
     3e0:	af 92       	push	r10
     3e2:	bf 92       	push	r11
     3e4:	cf 92       	push	r12
     3e6:	df 92       	push	r13
     3e8:	ef 92       	push	r14
     3ea:	ff 92       	push	r15
     3ec:	1f 93       	push	r17
     3ee:	cf 93       	push	r28
     3f0:	df 93       	push	r29
     3f2:	d8 2f       	mov	r29, r24
     3f4:	19 2f       	mov	r17, r25
     3f6:	4a 01       	movw	r8, r20
     3f8:	5b 01       	movw	r10, r22
     3fa:	c2 2f       	mov	r28, r18
    int int_part = (int)num;
     3fc:	cb 01       	movw	r24, r22
     3fe:	ba 01       	movw	r22, r20
     400:	0e 94 35 04 	call	0x86a	; 0x86a <__fixsfsi>
     404:	6b 01       	movw	r12, r22
     406:	7c 01       	movw	r14, r24
    double float_part = num - int_part;
     408:	07 2e       	mov	r0, r23
     40a:	00 0c       	add	r0, r0
     40c:	88 0b       	sbc	r24, r24
     40e:	99 0b       	sbc	r25, r25
     410:	0e 94 6d 04 	call	0x8da	; 0x8da <__floatsisf>
     414:	9b 01       	movw	r18, r22
     416:	ac 01       	movw	r20, r24
     418:	c5 01       	movw	r24, r10
     41a:	b4 01       	movw	r22, r8
     41c:	0e 94 56 03 	call	0x6ac	; 0x6ac <__subsf3>
     420:	4b 01       	movw	r8, r22
     422:	5c 01       	movw	r10, r24
    int float_part_int = (int)(float_part * pow(10, precision));
     424:	6c 2f       	mov	r22, r28
     426:	70 e0       	ldi	r23, 0x00	; 0
     428:	80 e0       	ldi	r24, 0x00	; 0
     42a:	90 e0       	ldi	r25, 0x00	; 0
     42c:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <__floatunsisf>
     430:	9b 01       	movw	r18, r22
     432:	ac 01       	movw	r20, r24
     434:	60 e0       	ldi	r22, 0x00	; 0
     436:	70 e0       	ldi	r23, 0x00	; 0
     438:	80 e2       	ldi	r24, 0x20	; 32
     43a:	91 e4       	ldi	r25, 0x41	; 65
     43c:	0e 94 66 05 	call	0xacc	; 0xacc <pow>
     440:	9b 01       	movw	r18, r22
     442:	ac 01       	movw	r20, r24
     444:	c5 01       	movw	r24, r10
     446:	b4 01       	movw	r22, r8
     448:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <__mulsf3>
     44c:	0e 94 35 04 	call	0x86a	; 0x86a <__fixsfsi>
     450:	9b 01       	movw	r18, r22
	if(float_part_int){float_part_int++;}
     452:	67 2b       	or	r22, r23
     454:	11 f0       	breq	.+4      	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
     456:	2f 5f       	subi	r18, 0xFF	; 255
     458:	3f 4f       	sbci	r19, 0xFF	; 255
    sprintf(str, "%d.%d", int_part,float_part_int);
     45a:	3f 93       	push	r19
     45c:	2f 93       	push	r18
     45e:	df 92       	push	r13
     460:	cf 92       	push	r12
     462:	80 e7       	ldi	r24, 0x70	; 112
     464:	90 e0       	ldi	r25, 0x00	; 0
     466:	9f 93       	push	r25
     468:	8f 93       	push	r24
     46a:	1f 93       	push	r17
     46c:	df 93       	push	r29
     46e:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <sprintf>
}
     472:	8d b7       	in	r24, 0x3d	; 61
     474:	9e b7       	in	r25, 0x3e	; 62
     476:	08 96       	adiw	r24, 0x08	; 8
     478:	0f b6       	in	r0, 0x3f	; 63
     47a:	f8 94       	cli
     47c:	9e bf       	out	0x3e, r25	; 62
     47e:	0f be       	out	0x3f, r0	; 63
     480:	8d bf       	out	0x3d, r24	; 61
     482:	df 91       	pop	r29
     484:	cf 91       	pop	r28
     486:	1f 91       	pop	r17
     488:	ff 90       	pop	r15
     48a:	ef 90       	pop	r14
     48c:	df 90       	pop	r13
     48e:	cf 90       	pop	r12
     490:	bf 90       	pop	r11
     492:	af 90       	pop	r10
     494:	9f 90       	pop	r9
     496:	8f 90       	pop	r8
     498:	08 95       	ret

0000049a <main>:
#include "calc.h"



int main(void)
{
     49a:	cf 93       	push	r28
     49c:	df 93       	push	r29
     49e:	cd b7       	in	r28, 0x3d	; 61
     4a0:	de b7       	in	r29, 0x3e	; 62
     4a2:	e2 97       	sbiw	r28, 0x32	; 50
     4a4:	0f b6       	in	r0, 0x3f	; 63
     4a6:	f8 94       	cli
     4a8:	de bf       	out	0x3e, r29	; 62
     4aa:	0f be       	out	0x3f, r0	; 63
     4ac:	cd bf       	out	0x3d, r28	; 61
	uint32_t num2 = 0;
	operation_t operation = OPERATION_ADD;
	double result = 0.0;
	uint8_t current_var = 0;

	char arr_result[50] = {0};
     4ae:	fe 01       	movw	r30, r28
     4b0:	31 96       	adiw	r30, 0x01	; 1
     4b2:	82 e3       	ldi	r24, 0x32	; 50
     4b4:	df 01       	movw	r26, r30
     4b6:	1d 92       	st	X+, r1
     4b8:	8a 95       	dec	r24
     4ba:	e9 f7       	brne	.-6      	; 0x4b6 <main+0x1c>
	uint8_t key = 0xff;
	lcd_init();
     4bc:	0e 94 27 01 	call	0x24e	; 0x24e <lcd_init>
	/*_delay_ms(20);
	lcd_string("lcd is work");
	_delay_ms(1000);
	lcd_cmd(LCD_CLEAR_SCREEN);*/
	keypad_vInit();
     4c0:	0e 94 82 00 	call	0x104	; 0x104 <keypad_vInit>
	lcd_string("keypad is work");
     4c4:	86 e7       	ldi	r24, 0x76	; 118
     4c6:	90 e0       	ldi	r25, 0x00	; 0
     4c8:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <lcd_string>
     4cc:	bf ef       	ldi	r27, 0xFF	; 255
     4ce:	24 e3       	ldi	r18, 0x34	; 52
     4d0:	8c e0       	ldi	r24, 0x0C	; 12
     4d2:	b1 50       	subi	r27, 0x01	; 1
     4d4:	20 40       	sbci	r18, 0x00	; 0
     4d6:	80 40       	sbci	r24, 0x00	; 0
     4d8:	e1 f7       	brne	.-8      	; 0x4d2 <main+0x38>
     4da:	00 c0       	rjmp	.+0      	; 0x4dc <main+0x42>
     4dc:	00 00       	nop
	_delay_ms(500);
	lcd_cmd(LCD_CLEAR_SCREEN);
     4de:	81 e0       	ldi	r24, 0x01	; 1
     4e0:	0e 94 01 01 	call	0x202	; 0x202 <lcd_cmd>
	uint8_t count = 0;
	uint32_t num1 = 0;
	uint32_t num2 = 0;
	operation_t operation = OPERATION_ADD;
	double result = 0.0;
	uint8_t current_var = 0;
     4e4:	00 e0       	ldi	r16, 0x00	; 0
int main(void)
{
	uint8_t count = 0;
	uint32_t num1 = 0;
	uint32_t num2 = 0;
	operation_t operation = OPERATION_ADD;
     4e6:	0f 2e       	mov	r0, r31
     4e8:	fb e2       	ldi	r31, 0x2B	; 43
     4ea:	7f 2e       	mov	r7, r31
     4ec:	f0 2d       	mov	r31, r0

int main(void)
{
	uint8_t count = 0;
	uint32_t num1 = 0;
	uint32_t num2 = 0;
     4ee:	81 2c       	mov	r8, r1
     4f0:	91 2c       	mov	r9, r1
     4f2:	54 01       	movw	r10, r8


int main(void)
{
	uint8_t count = 0;
	uint32_t num1 = 0;
     4f4:	c1 2c       	mov	r12, r1
     4f6:	d1 2c       	mov	r13, r1
     4f8:	76 01       	movw	r14, r12



int main(void)
{
	uint8_t count = 0;
     4fa:	10 e0       	ldi	r17, 0x00	; 0

	/* Replace with your application code */
	while (1)
	{

		key = keypad_u8check_press();
     4fc:	0e 94 87 00 	call	0x10e	; 0x10e <keypad_u8check_press>
		// display the key on the LCD
		if (key != 0xff)
     500:	8f 3f       	cpi	r24, 0xFF	; 255
     502:	09 f4       	brne	.+2      	; 0x506 <main+0x6c>
     504:	c6 c0       	rjmp	.+396    	; 0x692 <main+0x1f8>
		{
			if(arr_result[0] != 0)
     506:	99 81       	ldd	r25, Y+1	; 0x01
     508:	99 23       	and	r25, r25
     50a:	a1 f0       	breq	.+40     	; 0x534 <main+0x9a>
			{
				lcd_cmd(LCD_CLEAR_SCREEN);
     50c:	81 e0       	ldi	r24, 0x01	; 1
     50e:	0e 94 01 01 	call	0x202	; 0x202 <lcd_cmd>
				memset(arr_result, 0, 16);
     512:	fe 01       	movw	r30, r28
     514:	31 96       	adiw	r30, 0x01	; 1
     516:	80 e1       	ldi	r24, 0x10	; 16
     518:	df 01       	movw	r26, r30
     51a:	1d 92       	st	X+, r1
     51c:	8a 95       	dec	r24
     51e:	e9 f7       	brne	.-6      	; 0x51a <main+0x80>
     520:	bf e7       	ldi	r27, 0x7F	; 127
     522:	28 e3       	ldi	r18, 0x38	; 56
     524:	81 e0       	ldi	r24, 0x01	; 1
     526:	b1 50       	subi	r27, 0x01	; 1
     528:	20 40       	sbci	r18, 0x00	; 0
     52a:	80 40       	sbci	r24, 0x00	; 0
     52c:	e1 f7       	brne	.-8      	; 0x526 <main+0x8c>
     52e:	00 c0       	rjmp	.+0      	; 0x530 <main+0x96>
     530:	00 00       	nop
				_delay_ms(50);
				continue;
     532:	e4 cf       	rjmp	.-56     	; 0x4fc <main+0x62>
			}
			if(key == 'A')
     534:	81 34       	cpi	r24, 0x41	; 65
     536:	c1 f4       	brne	.+48     	; 0x568 <main+0xce>
			{
				lcd_cmd(LCD_CLEAR_SCREEN);
     538:	81 e0       	ldi	r24, 0x01	; 1
     53a:	0e 94 01 01 	call	0x202	; 0x202 <lcd_cmd>
     53e:	9f e7       	ldi	r25, 0x7F	; 127
     540:	a8 e3       	ldi	r26, 0x38	; 56
     542:	b1 e0       	ldi	r27, 0x01	; 1
     544:	91 50       	subi	r25, 0x01	; 1
     546:	a0 40       	sbci	r26, 0x00	; 0
     548:	b0 40       	sbci	r27, 0x00	; 0
     54a:	e1 f7       	brne	.-8      	; 0x544 <main+0xaa>
     54c:	00 c0       	rjmp	.+0      	; 0x54e <main+0xb4>
     54e:	00 00       	nop
				_delay_ms(50);
				count = 0;
				num1 = 0;
				num2 = 0;
				operation = OPERATION_ADD;
     550:	0f 2e       	mov	r0, r31
     552:	fb e2       	ldi	r31, 0x2B	; 43
     554:	7f 2e       	mov	r7, r31
     556:	f0 2d       	mov	r31, r0
			{
				lcd_cmd(LCD_CLEAR_SCREEN);
				_delay_ms(50);
				count = 0;
				num1 = 0;
				num2 = 0;
     558:	81 2c       	mov	r8, r1
     55a:	91 2c       	mov	r9, r1
     55c:	54 01       	movw	r10, r8
			if(key == 'A')
			{
				lcd_cmd(LCD_CLEAR_SCREEN);
				_delay_ms(50);
				count = 0;
				num1 = 0;
     55e:	c1 2c       	mov	r12, r1
     560:	d1 2c       	mov	r13, r1
     562:	76 01       	movw	r14, r12
			}
			if(key == 'A')
			{
				lcd_cmd(LCD_CLEAR_SCREEN);
				_delay_ms(50);
				count = 0;
     564:	10 e0       	ldi	r17, 0x00	; 0
				num1 = 0;
				num2 = 0;
				operation = OPERATION_ADD;
				result = 0;
				continue;
     566:	ca cf       	rjmp	.-108    	; 0x4fc <main+0x62>
			}
			else if(key >= '0' && key <= '9')
     568:	90 ed       	ldi	r25, 0xD0	; 208
     56a:	98 0f       	add	r25, r24
     56c:	9a 30       	cpi	r25, 0x0A	; 10
     56e:	08 f0       	brcs	.+2      	; 0x572 <main+0xd8>
     570:	42 c0       	rjmp	.+132    	; 0x5f6 <main+0x15c>
			{
				(!current_var) && (num1 = num1 * 10 + (key - '0'));
     572:	01 11       	cpse	r16, r1
     574:	1e c0       	rjmp	.+60     	; 0x5b2 <main+0x118>
     576:	cc 0c       	add	r12, r12
     578:	dd 1c       	adc	r13, r13
     57a:	ee 1c       	adc	r14, r14
     57c:	ff 1c       	adc	r15, r15
     57e:	b7 01       	movw	r22, r14
     580:	a6 01       	movw	r20, r12
     582:	44 0f       	add	r20, r20
     584:	55 1f       	adc	r21, r21
     586:	66 1f       	adc	r22, r22
     588:	77 1f       	adc	r23, r23
     58a:	44 0f       	add	r20, r20
     58c:	55 1f       	adc	r21, r21
     58e:	66 1f       	adc	r22, r22
     590:	77 1f       	adc	r23, r23
     592:	c4 0e       	add	r12, r20
     594:	d5 1e       	adc	r13, r21
     596:	e6 1e       	adc	r14, r22
     598:	f7 1e       	adc	r15, r23
     59a:	48 2f       	mov	r20, r24
     59c:	50 e0       	ldi	r21, 0x00	; 0
     59e:	40 53       	subi	r20, 0x30	; 48
     5a0:	51 09       	sbc	r21, r1
     5a2:	05 2e       	mov	r0, r21
     5a4:	00 0c       	add	r0, r0
     5a6:	66 0b       	sbc	r22, r22
     5a8:	77 0b       	sbc	r23, r23
     5aa:	c4 0e       	add	r12, r20
     5ac:	d5 1e       	adc	r13, r21
     5ae:	e6 1e       	adc	r14, r22
     5b0:	f7 1e       	adc	r15, r23
				(current_var) && (num2 = num2 * 10 + (key - '0'));
     5b2:	00 23       	and	r16, r16
     5b4:	09 f4       	brne	.+2      	; 0x5b8 <main+0x11e>
     5b6:	61 c0       	rjmp	.+194    	; 0x67a <main+0x1e0>
     5b8:	88 0c       	add	r8, r8
     5ba:	99 1c       	adc	r9, r9
     5bc:	aa 1c       	adc	r10, r10
     5be:	bb 1c       	adc	r11, r11
     5c0:	b5 01       	movw	r22, r10
     5c2:	a4 01       	movw	r20, r8
     5c4:	44 0f       	add	r20, r20
     5c6:	55 1f       	adc	r21, r21
     5c8:	66 1f       	adc	r22, r22
     5ca:	77 1f       	adc	r23, r23
     5cc:	44 0f       	add	r20, r20
     5ce:	55 1f       	adc	r21, r21
     5d0:	66 1f       	adc	r22, r22
     5d2:	77 1f       	adc	r23, r23
     5d4:	84 0e       	add	r8, r20
     5d6:	95 1e       	adc	r9, r21
     5d8:	a6 1e       	adc	r10, r22
     5da:	b7 1e       	adc	r11, r23
     5dc:	48 2f       	mov	r20, r24
     5de:	50 e0       	ldi	r21, 0x00	; 0
     5e0:	40 53       	subi	r20, 0x30	; 48
     5e2:	51 09       	sbc	r21, r1
     5e4:	05 2e       	mov	r0, r21
     5e6:	00 0c       	add	r0, r0
     5e8:	66 0b       	sbc	r22, r22
     5ea:	77 0b       	sbc	r23, r23
     5ec:	84 0e       	add	r8, r20
     5ee:	95 1e       	adc	r9, r21
     5f0:	a6 1e       	adc	r10, r22
     5f2:	b7 1e       	adc	r11, r23
     5f4:	42 c0       	rjmp	.+132    	; 0x67a <main+0x1e0>
			}
			else if (key =='+' || key == '-' || key == '*' || key == '/')
     5f6:	8b 32       	cpi	r24, 0x2B	; 43
     5f8:	a9 f1       	breq	.+106    	; 0x664 <main+0x1ca>
     5fa:	8d 32       	cpi	r24, 0x2D	; 45
     5fc:	b1 f1       	breq	.+108    	; 0x66a <main+0x1d0>
     5fe:	8a 32       	cpi	r24, 0x2A	; 42
     600:	b9 f1       	breq	.+110    	; 0x670 <main+0x1d6>
     602:	8f 32       	cpi	r24, 0x2F	; 47
     604:	c1 f1       	breq	.+112    	; 0x676 <main+0x1dc>
			{
				operation = key;
				current_var = 1;
			}
			else if (key == '=')
     606:	8d 33       	cpi	r24, 0x3D	; 61
     608:	c1 f5       	brne	.+112    	; 0x67a <main+0x1e0>
			{				
				result = calc(num1, num2, operation);
     60a:	07 2d       	mov	r16, r7
     60c:	a5 01       	movw	r20, r10
     60e:	94 01       	movw	r18, r8
     610:	c7 01       	movw	r24, r14
     612:	b6 01       	movw	r22, r12
     614:	0e 94 87 01 	call	0x30e	; 0x30e <calc>
     618:	6b 01       	movw	r12, r22
     61a:	7c 01       	movw	r14, r24
				//float res=num1+num2;
				lcd_cmd(LCD_CLEAR_SCREEN);
     61c:	81 e0       	ldi	r24, 0x01	; 1
     61e:	0e 94 01 01 	call	0x202	; 0x202 <lcd_cmd>
				double_to_string(arr_result,(double)result,2);
     622:	22 e0       	ldi	r18, 0x02	; 2
     624:	b7 01       	movw	r22, r14
     626:	a6 01       	movw	r20, r12
     628:	ce 01       	movw	r24, r28
     62a:	01 96       	adiw	r24, 0x01	; 1
     62c:	0e 94 ee 01 	call	0x3dc	; 0x3dc <double_to_string>
				lcd_string(arr_result);
     630:	ce 01       	movw	r24, r28
     632:	01 96       	adiw	r24, 0x01	; 1
     634:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <lcd_string>
     638:	2f e7       	ldi	r18, 0x7F	; 127
     63a:	88 e3       	ldi	r24, 0x38	; 56
     63c:	91 e0       	ldi	r25, 0x01	; 1
     63e:	21 50       	subi	r18, 0x01	; 1
     640:	80 40       	sbci	r24, 0x00	; 0
     642:	90 40       	sbci	r25, 0x00	; 0
     644:	e1 f7       	brne	.-8      	; 0x63e <main+0x1a4>
     646:	00 c0       	rjmp	.+0      	; 0x648 <main+0x1ae>
     648:	00 00       	nop
				count = 0;
				num1 = 0;
				num2 = 0;
				operation = OPERATION_ADD;
				result = 0;
				current_var = 0;
     64a:	00 e0       	ldi	r16, 0x00	; 0
				_delay_ms(50);
				
				count = 0;
				num1 = 0;
				num2 = 0;
				operation = OPERATION_ADD;
     64c:	0f 2e       	mov	r0, r31
     64e:	fb e2       	ldi	r31, 0x2B	; 43
     650:	7f 2e       	mov	r7, r31
     652:	f0 2d       	mov	r31, r0
				lcd_string(arr_result);
				_delay_ms(50);
				
				count = 0;
				num1 = 0;
				num2 = 0;
     654:	81 2c       	mov	r8, r1
     656:	91 2c       	mov	r9, r1
     658:	54 01       	movw	r10, r8
				double_to_string(arr_result,(double)result,2);
				lcd_string(arr_result);
				_delay_ms(50);
				
				count = 0;
				num1 = 0;
     65a:	c1 2c       	mov	r12, r1
     65c:	d1 2c       	mov	r13, r1
     65e:	76 01       	movw	r14, r12
				lcd_cmd(LCD_CLEAR_SCREEN);
				double_to_string(arr_result,(double)result,2);
				lcd_string(arr_result);
				_delay_ms(50);
				
				count = 0;
     660:	10 e0       	ldi	r17, 0x00	; 0
				num1 = 0;
				num2 = 0;
				operation = OPERATION_ADD;
				result = 0;
				current_var = 0;
				continue;
     662:	4c cf       	rjmp	.-360    	; 0x4fc <main+0x62>
				(!current_var) && (num1 = num1 * 10 + (key - '0'));
				(current_var) && (num2 = num2 * 10 + (key - '0'));
			}
			else if (key =='+' || key == '-' || key == '*' || key == '/')
			{
				operation = key;
     664:	78 2e       	mov	r7, r24
				current_var = 1;
     666:	01 e0       	ldi	r16, 0x01	; 1
     668:	08 c0       	rjmp	.+16     	; 0x67a <main+0x1e0>
				(!current_var) && (num1 = num1 * 10 + (key - '0'));
				(current_var) && (num2 = num2 * 10 + (key - '0'));
			}
			else if (key =='+' || key == '-' || key == '*' || key == '/')
			{
				operation = key;
     66a:	78 2e       	mov	r7, r24
				current_var = 1;
     66c:	01 e0       	ldi	r16, 0x01	; 1
     66e:	05 c0       	rjmp	.+10     	; 0x67a <main+0x1e0>
				(!current_var) && (num1 = num1 * 10 + (key - '0'));
				(current_var) && (num2 = num2 * 10 + (key - '0'));
			}
			else if (key =='+' || key == '-' || key == '*' || key == '/')
			{
				operation = key;
     670:	78 2e       	mov	r7, r24
				current_var = 1;
     672:	01 e0       	ldi	r16, 0x01	; 1
     674:	02 c0       	rjmp	.+4      	; 0x67a <main+0x1e0>
				(!current_var) && (num1 = num1 * 10 + (key - '0'));
				(current_var) && (num2 = num2 * 10 + (key - '0'));
			}
			else if (key =='+' || key == '-' || key == '*' || key == '/')
			{
				operation = key;
     676:	78 2e       	mov	r7, r24
				current_var = 1;
     678:	01 e0       	ldi	r16, 0x01	; 1
				operation = OPERATION_ADD;
				result = 0;
				current_var = 0;
				continue;
			}
			count++;
     67a:	1f 5f       	subi	r17, 0xFF	; 255
			lcd_char(key);
     67c:	0e 94 54 01 	call	0x2a8	; 0x2a8 <lcd_char>
     680:	af e7       	ldi	r26, 0x7F	; 127
     682:	ba e1       	ldi	r27, 0x1A	; 26
     684:	26 e0       	ldi	r18, 0x06	; 6
     686:	a1 50       	subi	r26, 0x01	; 1
     688:	b0 40       	sbci	r27, 0x00	; 0
     68a:	20 40       	sbci	r18, 0x00	; 0
     68c:	e1 f7       	brne	.-8      	; 0x686 <main+0x1ec>
     68e:	00 c0       	rjmp	.+0      	; 0x690 <main+0x1f6>
     690:	00 00       	nop
			_delay_ms(250);
		}
		if (count == 16)
     692:	10 31       	cpi	r17, 0x10	; 16
     694:	19 f4       	brne	.+6      	; 0x69c <main+0x202>
		{
			lcd_cmd(LCD_BEGIN_AT_SECOND_ROW);
     696:	80 ec       	ldi	r24, 0xC0	; 192
     698:	0e 94 01 01 	call	0x202	; 0x202 <lcd_cmd>
		}
		if (count >= 32)
     69c:	10 32       	cpi	r17, 0x20	; 32
     69e:	08 f4       	brcc	.+2      	; 0x6a2 <main+0x208>
     6a0:	2d cf       	rjmp	.-422    	; 0x4fc <main+0x62>
		{
			lcd_cmd(LCD_BEGIN_AT_FIRST_ROW);
     6a2:	80 e8       	ldi	r24, 0x80	; 128
     6a4:	0e 94 01 01 	call	0x202	; 0x202 <lcd_cmd>
			count = 0;
     6a8:	10 e0       	ldi	r17, 0x00	; 0
     6aa:	28 cf       	rjmp	.-432    	; 0x4fc <main+0x62>

000006ac <__subsf3>:
     6ac:	50 58       	subi	r21, 0x80	; 128

000006ae <__addsf3>:
     6ae:	bb 27       	eor	r27, r27
     6b0:	aa 27       	eor	r26, r26
     6b2:	0e 94 6e 03 	call	0x6dc	; 0x6dc <__addsf3x>
     6b6:	0c 94 bf 04 	jmp	0x97e	; 0x97e <__fp_round>
     6ba:	0e 94 b1 04 	call	0x962	; 0x962 <__fp_pscA>
     6be:	38 f0       	brcs	.+14     	; 0x6ce <__addsf3+0x20>
     6c0:	0e 94 b8 04 	call	0x970	; 0x970 <__fp_pscB>
     6c4:	20 f0       	brcs	.+8      	; 0x6ce <__addsf3+0x20>
     6c6:	39 f4       	brne	.+14     	; 0x6d6 <__addsf3+0x28>
     6c8:	9f 3f       	cpi	r25, 0xFF	; 255
     6ca:	19 f4       	brne	.+6      	; 0x6d2 <__addsf3+0x24>
     6cc:	26 f4       	brtc	.+8      	; 0x6d6 <__addsf3+0x28>
     6ce:	0c 94 ae 04 	jmp	0x95c	; 0x95c <__fp_nan>
     6d2:	0e f4       	brtc	.+2      	; 0x6d6 <__addsf3+0x28>
     6d4:	e0 95       	com	r30
     6d6:	e7 fb       	bst	r30, 7
     6d8:	0c 94 a8 04 	jmp	0x950	; 0x950 <__fp_inf>

000006dc <__addsf3x>:
     6dc:	e9 2f       	mov	r30, r25
     6de:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <__fp_split3>
     6e2:	58 f3       	brcs	.-42     	; 0x6ba <__addsf3+0xc>
     6e4:	ba 17       	cp	r27, r26
     6e6:	62 07       	cpc	r22, r18
     6e8:	73 07       	cpc	r23, r19
     6ea:	84 07       	cpc	r24, r20
     6ec:	95 07       	cpc	r25, r21
     6ee:	20 f0       	brcs	.+8      	; 0x6f8 <__addsf3x+0x1c>
     6f0:	79 f4       	brne	.+30     	; 0x710 <__addsf3x+0x34>
     6f2:	a6 f5       	brtc	.+104    	; 0x75c <__addsf3x+0x80>
     6f4:	0c 94 f2 04 	jmp	0x9e4	; 0x9e4 <__fp_zero>
     6f8:	0e f4       	brtc	.+2      	; 0x6fc <__addsf3x+0x20>
     6fa:	e0 95       	com	r30
     6fc:	0b 2e       	mov	r0, r27
     6fe:	ba 2f       	mov	r27, r26
     700:	a0 2d       	mov	r26, r0
     702:	0b 01       	movw	r0, r22
     704:	b9 01       	movw	r22, r18
     706:	90 01       	movw	r18, r0
     708:	0c 01       	movw	r0, r24
     70a:	ca 01       	movw	r24, r20
     70c:	a0 01       	movw	r20, r0
     70e:	11 24       	eor	r1, r1
     710:	ff 27       	eor	r31, r31
     712:	59 1b       	sub	r21, r25
     714:	99 f0       	breq	.+38     	; 0x73c <__addsf3x+0x60>
     716:	59 3f       	cpi	r21, 0xF9	; 249
     718:	50 f4       	brcc	.+20     	; 0x72e <__addsf3x+0x52>
     71a:	50 3e       	cpi	r21, 0xE0	; 224
     71c:	68 f1       	brcs	.+90     	; 0x778 <__addsf3x+0x9c>
     71e:	1a 16       	cp	r1, r26
     720:	f0 40       	sbci	r31, 0x00	; 0
     722:	a2 2f       	mov	r26, r18
     724:	23 2f       	mov	r18, r19
     726:	34 2f       	mov	r19, r20
     728:	44 27       	eor	r20, r20
     72a:	58 5f       	subi	r21, 0xF8	; 248
     72c:	f3 cf       	rjmp	.-26     	; 0x714 <__addsf3x+0x38>
     72e:	46 95       	lsr	r20
     730:	37 95       	ror	r19
     732:	27 95       	ror	r18
     734:	a7 95       	ror	r26
     736:	f0 40       	sbci	r31, 0x00	; 0
     738:	53 95       	inc	r21
     73a:	c9 f7       	brne	.-14     	; 0x72e <__addsf3x+0x52>
     73c:	7e f4       	brtc	.+30     	; 0x75c <__addsf3x+0x80>
     73e:	1f 16       	cp	r1, r31
     740:	ba 0b       	sbc	r27, r26
     742:	62 0b       	sbc	r22, r18
     744:	73 0b       	sbc	r23, r19
     746:	84 0b       	sbc	r24, r20
     748:	ba f0       	brmi	.+46     	; 0x778 <__addsf3x+0x9c>
     74a:	91 50       	subi	r25, 0x01	; 1
     74c:	a1 f0       	breq	.+40     	; 0x776 <__addsf3x+0x9a>
     74e:	ff 0f       	add	r31, r31
     750:	bb 1f       	adc	r27, r27
     752:	66 1f       	adc	r22, r22
     754:	77 1f       	adc	r23, r23
     756:	88 1f       	adc	r24, r24
     758:	c2 f7       	brpl	.-16     	; 0x74a <__addsf3x+0x6e>
     75a:	0e c0       	rjmp	.+28     	; 0x778 <__addsf3x+0x9c>
     75c:	ba 0f       	add	r27, r26
     75e:	62 1f       	adc	r22, r18
     760:	73 1f       	adc	r23, r19
     762:	84 1f       	adc	r24, r20
     764:	48 f4       	brcc	.+18     	; 0x778 <__addsf3x+0x9c>
     766:	87 95       	ror	r24
     768:	77 95       	ror	r23
     76a:	67 95       	ror	r22
     76c:	b7 95       	ror	r27
     76e:	f7 95       	ror	r31
     770:	9e 3f       	cpi	r25, 0xFE	; 254
     772:	08 f0       	brcs	.+2      	; 0x776 <__addsf3x+0x9a>
     774:	b0 cf       	rjmp	.-160    	; 0x6d6 <__addsf3+0x28>
     776:	93 95       	inc	r25
     778:	88 0f       	add	r24, r24
     77a:	08 f0       	brcs	.+2      	; 0x77e <__addsf3x+0xa2>
     77c:	99 27       	eor	r25, r25
     77e:	ee 0f       	add	r30, r30
     780:	97 95       	ror	r25
     782:	87 95       	ror	r24
     784:	08 95       	ret

00000786 <__divsf3>:
     786:	0e 94 d7 03 	call	0x7ae	; 0x7ae <__divsf3x>
     78a:	0c 94 bf 04 	jmp	0x97e	; 0x97e <__fp_round>
     78e:	0e 94 b8 04 	call	0x970	; 0x970 <__fp_pscB>
     792:	58 f0       	brcs	.+22     	; 0x7aa <__divsf3+0x24>
     794:	0e 94 b1 04 	call	0x962	; 0x962 <__fp_pscA>
     798:	40 f0       	brcs	.+16     	; 0x7aa <__divsf3+0x24>
     79a:	29 f4       	brne	.+10     	; 0x7a6 <__divsf3+0x20>
     79c:	5f 3f       	cpi	r21, 0xFF	; 255
     79e:	29 f0       	breq	.+10     	; 0x7aa <__divsf3+0x24>
     7a0:	0c 94 a8 04 	jmp	0x950	; 0x950 <__fp_inf>
     7a4:	51 11       	cpse	r21, r1
     7a6:	0c 94 f3 04 	jmp	0x9e6	; 0x9e6 <__fp_szero>
     7aa:	0c 94 ae 04 	jmp	0x95c	; 0x95c <__fp_nan>

000007ae <__divsf3x>:
     7ae:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <__fp_split3>
     7b2:	68 f3       	brcs	.-38     	; 0x78e <__divsf3+0x8>

000007b4 <__divsf3_pse>:
     7b4:	99 23       	and	r25, r25
     7b6:	b1 f3       	breq	.-20     	; 0x7a4 <__divsf3+0x1e>
     7b8:	55 23       	and	r21, r21
     7ba:	91 f3       	breq	.-28     	; 0x7a0 <__divsf3+0x1a>
     7bc:	95 1b       	sub	r25, r21
     7be:	55 0b       	sbc	r21, r21
     7c0:	bb 27       	eor	r27, r27
     7c2:	aa 27       	eor	r26, r26
     7c4:	62 17       	cp	r22, r18
     7c6:	73 07       	cpc	r23, r19
     7c8:	84 07       	cpc	r24, r20
     7ca:	38 f0       	brcs	.+14     	; 0x7da <__divsf3_pse+0x26>
     7cc:	9f 5f       	subi	r25, 0xFF	; 255
     7ce:	5f 4f       	sbci	r21, 0xFF	; 255
     7d0:	22 0f       	add	r18, r18
     7d2:	33 1f       	adc	r19, r19
     7d4:	44 1f       	adc	r20, r20
     7d6:	aa 1f       	adc	r26, r26
     7d8:	a9 f3       	breq	.-22     	; 0x7c4 <__divsf3_pse+0x10>
     7da:	35 d0       	rcall	.+106    	; 0x846 <__DATA_REGION_LENGTH__+0x46>
     7dc:	0e 2e       	mov	r0, r30
     7de:	3a f0       	brmi	.+14     	; 0x7ee <__divsf3_pse+0x3a>
     7e0:	e0 e8       	ldi	r30, 0x80	; 128
     7e2:	32 d0       	rcall	.+100    	; 0x848 <__DATA_REGION_LENGTH__+0x48>
     7e4:	91 50       	subi	r25, 0x01	; 1
     7e6:	50 40       	sbci	r21, 0x00	; 0
     7e8:	e6 95       	lsr	r30
     7ea:	00 1c       	adc	r0, r0
     7ec:	ca f7       	brpl	.-14     	; 0x7e0 <__divsf3_pse+0x2c>
     7ee:	2b d0       	rcall	.+86     	; 0x846 <__DATA_REGION_LENGTH__+0x46>
     7f0:	fe 2f       	mov	r31, r30
     7f2:	29 d0       	rcall	.+82     	; 0x846 <__DATA_REGION_LENGTH__+0x46>
     7f4:	66 0f       	add	r22, r22
     7f6:	77 1f       	adc	r23, r23
     7f8:	88 1f       	adc	r24, r24
     7fa:	bb 1f       	adc	r27, r27
     7fc:	26 17       	cp	r18, r22
     7fe:	37 07       	cpc	r19, r23
     800:	48 07       	cpc	r20, r24
     802:	ab 07       	cpc	r26, r27
     804:	b0 e8       	ldi	r27, 0x80	; 128
     806:	09 f0       	breq	.+2      	; 0x80a <__DATA_REGION_LENGTH__+0xa>
     808:	bb 0b       	sbc	r27, r27
     80a:	80 2d       	mov	r24, r0
     80c:	bf 01       	movw	r22, r30
     80e:	ff 27       	eor	r31, r31
     810:	93 58       	subi	r25, 0x83	; 131
     812:	5f 4f       	sbci	r21, 0xFF	; 255
     814:	3a f0       	brmi	.+14     	; 0x824 <__DATA_REGION_LENGTH__+0x24>
     816:	9e 3f       	cpi	r25, 0xFE	; 254
     818:	51 05       	cpc	r21, r1
     81a:	78 f0       	brcs	.+30     	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
     81c:	0c 94 a8 04 	jmp	0x950	; 0x950 <__fp_inf>
     820:	0c 94 f3 04 	jmp	0x9e6	; 0x9e6 <__fp_szero>
     824:	5f 3f       	cpi	r21, 0xFF	; 255
     826:	e4 f3       	brlt	.-8      	; 0x820 <__DATA_REGION_LENGTH__+0x20>
     828:	98 3e       	cpi	r25, 0xE8	; 232
     82a:	d4 f3       	brlt	.-12     	; 0x820 <__DATA_REGION_LENGTH__+0x20>
     82c:	86 95       	lsr	r24
     82e:	77 95       	ror	r23
     830:	67 95       	ror	r22
     832:	b7 95       	ror	r27
     834:	f7 95       	ror	r31
     836:	9f 5f       	subi	r25, 0xFF	; 255
     838:	c9 f7       	brne	.-14     	; 0x82c <__DATA_REGION_LENGTH__+0x2c>
     83a:	88 0f       	add	r24, r24
     83c:	91 1d       	adc	r25, r1
     83e:	96 95       	lsr	r25
     840:	87 95       	ror	r24
     842:	97 f9       	bld	r25, 7
     844:	08 95       	ret
     846:	e1 e0       	ldi	r30, 0x01	; 1
     848:	66 0f       	add	r22, r22
     84a:	77 1f       	adc	r23, r23
     84c:	88 1f       	adc	r24, r24
     84e:	bb 1f       	adc	r27, r27
     850:	62 17       	cp	r22, r18
     852:	73 07       	cpc	r23, r19
     854:	84 07       	cpc	r24, r20
     856:	ba 07       	cpc	r27, r26
     858:	20 f0       	brcs	.+8      	; 0x862 <__stack+0x3>
     85a:	62 1b       	sub	r22, r18
     85c:	73 0b       	sbc	r23, r19
     85e:	84 0b       	sbc	r24, r20
     860:	ba 0b       	sbc	r27, r26
     862:	ee 1f       	adc	r30, r30
     864:	88 f7       	brcc	.-30     	; 0x848 <__DATA_REGION_LENGTH__+0x48>
     866:	e0 95       	com	r30
     868:	08 95       	ret

0000086a <__fixsfsi>:
     86a:	0e 94 3c 04 	call	0x878	; 0x878 <__fixunssfsi>
     86e:	68 94       	set
     870:	b1 11       	cpse	r27, r1
     872:	0c 94 f3 04 	jmp	0x9e6	; 0x9e6 <__fp_szero>
     876:	08 95       	ret

00000878 <__fixunssfsi>:
     878:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <__fp_splitA>
     87c:	88 f0       	brcs	.+34     	; 0x8a0 <__fixunssfsi+0x28>
     87e:	9f 57       	subi	r25, 0x7F	; 127
     880:	98 f0       	brcs	.+38     	; 0x8a8 <__fixunssfsi+0x30>
     882:	b9 2f       	mov	r27, r25
     884:	99 27       	eor	r25, r25
     886:	b7 51       	subi	r27, 0x17	; 23
     888:	b0 f0       	brcs	.+44     	; 0x8b6 <__fixunssfsi+0x3e>
     88a:	e1 f0       	breq	.+56     	; 0x8c4 <__fixunssfsi+0x4c>
     88c:	66 0f       	add	r22, r22
     88e:	77 1f       	adc	r23, r23
     890:	88 1f       	adc	r24, r24
     892:	99 1f       	adc	r25, r25
     894:	1a f0       	brmi	.+6      	; 0x89c <__fixunssfsi+0x24>
     896:	ba 95       	dec	r27
     898:	c9 f7       	brne	.-14     	; 0x88c <__fixunssfsi+0x14>
     89a:	14 c0       	rjmp	.+40     	; 0x8c4 <__fixunssfsi+0x4c>
     89c:	b1 30       	cpi	r27, 0x01	; 1
     89e:	91 f0       	breq	.+36     	; 0x8c4 <__fixunssfsi+0x4c>
     8a0:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <__fp_zero>
     8a4:	b1 e0       	ldi	r27, 0x01	; 1
     8a6:	08 95       	ret
     8a8:	0c 94 f2 04 	jmp	0x9e4	; 0x9e4 <__fp_zero>
     8ac:	67 2f       	mov	r22, r23
     8ae:	78 2f       	mov	r23, r24
     8b0:	88 27       	eor	r24, r24
     8b2:	b8 5f       	subi	r27, 0xF8	; 248
     8b4:	39 f0       	breq	.+14     	; 0x8c4 <__fixunssfsi+0x4c>
     8b6:	b9 3f       	cpi	r27, 0xF9	; 249
     8b8:	cc f3       	brlt	.-14     	; 0x8ac <__fixunssfsi+0x34>
     8ba:	86 95       	lsr	r24
     8bc:	77 95       	ror	r23
     8be:	67 95       	ror	r22
     8c0:	b3 95       	inc	r27
     8c2:	d9 f7       	brne	.-10     	; 0x8ba <__fixunssfsi+0x42>
     8c4:	3e f4       	brtc	.+14     	; 0x8d4 <__fixunssfsi+0x5c>
     8c6:	90 95       	com	r25
     8c8:	80 95       	com	r24
     8ca:	70 95       	com	r23
     8cc:	61 95       	neg	r22
     8ce:	7f 4f       	sbci	r23, 0xFF	; 255
     8d0:	8f 4f       	sbci	r24, 0xFF	; 255
     8d2:	9f 4f       	sbci	r25, 0xFF	; 255
     8d4:	08 95       	ret

000008d6 <__floatunsisf>:
     8d6:	e8 94       	clt
     8d8:	09 c0       	rjmp	.+18     	; 0x8ec <__floatsisf+0x12>

000008da <__floatsisf>:
     8da:	97 fb       	bst	r25, 7
     8dc:	3e f4       	brtc	.+14     	; 0x8ec <__floatsisf+0x12>
     8de:	90 95       	com	r25
     8e0:	80 95       	com	r24
     8e2:	70 95       	com	r23
     8e4:	61 95       	neg	r22
     8e6:	7f 4f       	sbci	r23, 0xFF	; 255
     8e8:	8f 4f       	sbci	r24, 0xFF	; 255
     8ea:	9f 4f       	sbci	r25, 0xFF	; 255
     8ec:	99 23       	and	r25, r25
     8ee:	a9 f0       	breq	.+42     	; 0x91a <__floatsisf+0x40>
     8f0:	f9 2f       	mov	r31, r25
     8f2:	96 e9       	ldi	r25, 0x96	; 150
     8f4:	bb 27       	eor	r27, r27
     8f6:	93 95       	inc	r25
     8f8:	f6 95       	lsr	r31
     8fa:	87 95       	ror	r24
     8fc:	77 95       	ror	r23
     8fe:	67 95       	ror	r22
     900:	b7 95       	ror	r27
     902:	f1 11       	cpse	r31, r1
     904:	f8 cf       	rjmp	.-16     	; 0x8f6 <__floatsisf+0x1c>
     906:	fa f4       	brpl	.+62     	; 0x946 <__floatsisf+0x6c>
     908:	bb 0f       	add	r27, r27
     90a:	11 f4       	brne	.+4      	; 0x910 <__floatsisf+0x36>
     90c:	60 ff       	sbrs	r22, 0
     90e:	1b c0       	rjmp	.+54     	; 0x946 <__floatsisf+0x6c>
     910:	6f 5f       	subi	r22, 0xFF	; 255
     912:	7f 4f       	sbci	r23, 0xFF	; 255
     914:	8f 4f       	sbci	r24, 0xFF	; 255
     916:	9f 4f       	sbci	r25, 0xFF	; 255
     918:	16 c0       	rjmp	.+44     	; 0x946 <__floatsisf+0x6c>
     91a:	88 23       	and	r24, r24
     91c:	11 f0       	breq	.+4      	; 0x922 <__floatsisf+0x48>
     91e:	96 e9       	ldi	r25, 0x96	; 150
     920:	11 c0       	rjmp	.+34     	; 0x944 <__floatsisf+0x6a>
     922:	77 23       	and	r23, r23
     924:	21 f0       	breq	.+8      	; 0x92e <__floatsisf+0x54>
     926:	9e e8       	ldi	r25, 0x8E	; 142
     928:	87 2f       	mov	r24, r23
     92a:	76 2f       	mov	r23, r22
     92c:	05 c0       	rjmp	.+10     	; 0x938 <__floatsisf+0x5e>
     92e:	66 23       	and	r22, r22
     930:	71 f0       	breq	.+28     	; 0x94e <__floatsisf+0x74>
     932:	96 e8       	ldi	r25, 0x86	; 134
     934:	86 2f       	mov	r24, r22
     936:	70 e0       	ldi	r23, 0x00	; 0
     938:	60 e0       	ldi	r22, 0x00	; 0
     93a:	2a f0       	brmi	.+10     	; 0x946 <__floatsisf+0x6c>
     93c:	9a 95       	dec	r25
     93e:	66 0f       	add	r22, r22
     940:	77 1f       	adc	r23, r23
     942:	88 1f       	adc	r24, r24
     944:	da f7       	brpl	.-10     	; 0x93c <__floatsisf+0x62>
     946:	88 0f       	add	r24, r24
     948:	96 95       	lsr	r25
     94a:	87 95       	ror	r24
     94c:	97 f9       	bld	r25, 7
     94e:	08 95       	ret

00000950 <__fp_inf>:
     950:	97 f9       	bld	r25, 7
     952:	9f 67       	ori	r25, 0x7F	; 127
     954:	80 e8       	ldi	r24, 0x80	; 128
     956:	70 e0       	ldi	r23, 0x00	; 0
     958:	60 e0       	ldi	r22, 0x00	; 0
     95a:	08 95       	ret

0000095c <__fp_nan>:
     95c:	9f ef       	ldi	r25, 0xFF	; 255
     95e:	80 ec       	ldi	r24, 0xC0	; 192
     960:	08 95       	ret

00000962 <__fp_pscA>:
     962:	00 24       	eor	r0, r0
     964:	0a 94       	dec	r0
     966:	16 16       	cp	r1, r22
     968:	17 06       	cpc	r1, r23
     96a:	18 06       	cpc	r1, r24
     96c:	09 06       	cpc	r0, r25
     96e:	08 95       	ret

00000970 <__fp_pscB>:
     970:	00 24       	eor	r0, r0
     972:	0a 94       	dec	r0
     974:	12 16       	cp	r1, r18
     976:	13 06       	cpc	r1, r19
     978:	14 06       	cpc	r1, r20
     97a:	05 06       	cpc	r0, r21
     97c:	08 95       	ret

0000097e <__fp_round>:
     97e:	09 2e       	mov	r0, r25
     980:	03 94       	inc	r0
     982:	00 0c       	add	r0, r0
     984:	11 f4       	brne	.+4      	; 0x98a <__fp_round+0xc>
     986:	88 23       	and	r24, r24
     988:	52 f0       	brmi	.+20     	; 0x99e <__fp_round+0x20>
     98a:	bb 0f       	add	r27, r27
     98c:	40 f4       	brcc	.+16     	; 0x99e <__fp_round+0x20>
     98e:	bf 2b       	or	r27, r31
     990:	11 f4       	brne	.+4      	; 0x996 <__fp_round+0x18>
     992:	60 ff       	sbrs	r22, 0
     994:	04 c0       	rjmp	.+8      	; 0x99e <__fp_round+0x20>
     996:	6f 5f       	subi	r22, 0xFF	; 255
     998:	7f 4f       	sbci	r23, 0xFF	; 255
     99a:	8f 4f       	sbci	r24, 0xFF	; 255
     99c:	9f 4f       	sbci	r25, 0xFF	; 255
     99e:	08 95       	ret

000009a0 <__fp_split3>:
     9a0:	57 fd       	sbrc	r21, 7
     9a2:	90 58       	subi	r25, 0x80	; 128
     9a4:	44 0f       	add	r20, r20
     9a6:	55 1f       	adc	r21, r21
     9a8:	59 f0       	breq	.+22     	; 0x9c0 <__fp_splitA+0x10>
     9aa:	5f 3f       	cpi	r21, 0xFF	; 255
     9ac:	71 f0       	breq	.+28     	; 0x9ca <__fp_splitA+0x1a>
     9ae:	47 95       	ror	r20

000009b0 <__fp_splitA>:
     9b0:	88 0f       	add	r24, r24
     9b2:	97 fb       	bst	r25, 7
     9b4:	99 1f       	adc	r25, r25
     9b6:	61 f0       	breq	.+24     	; 0x9d0 <__fp_splitA+0x20>
     9b8:	9f 3f       	cpi	r25, 0xFF	; 255
     9ba:	79 f0       	breq	.+30     	; 0x9da <__fp_splitA+0x2a>
     9bc:	87 95       	ror	r24
     9be:	08 95       	ret
     9c0:	12 16       	cp	r1, r18
     9c2:	13 06       	cpc	r1, r19
     9c4:	14 06       	cpc	r1, r20
     9c6:	55 1f       	adc	r21, r21
     9c8:	f2 cf       	rjmp	.-28     	; 0x9ae <__fp_split3+0xe>
     9ca:	46 95       	lsr	r20
     9cc:	f1 df       	rcall	.-30     	; 0x9b0 <__fp_splitA>
     9ce:	08 c0       	rjmp	.+16     	; 0x9e0 <__fp_splitA+0x30>
     9d0:	16 16       	cp	r1, r22
     9d2:	17 06       	cpc	r1, r23
     9d4:	18 06       	cpc	r1, r24
     9d6:	99 1f       	adc	r25, r25
     9d8:	f1 cf       	rjmp	.-30     	; 0x9bc <__fp_splitA+0xc>
     9da:	86 95       	lsr	r24
     9dc:	71 05       	cpc	r23, r1
     9de:	61 05       	cpc	r22, r1
     9e0:	08 94       	sec
     9e2:	08 95       	ret

000009e4 <__fp_zero>:
     9e4:	e8 94       	clt

000009e6 <__fp_szero>:
     9e6:	bb 27       	eor	r27, r27
     9e8:	66 27       	eor	r22, r22
     9ea:	77 27       	eor	r23, r23
     9ec:	cb 01       	movw	r24, r22
     9ee:	97 f9       	bld	r25, 7
     9f0:	08 95       	ret

000009f2 <__mulsf3>:
     9f2:	0e 94 0c 05 	call	0xa18	; 0xa18 <__mulsf3x>
     9f6:	0c 94 bf 04 	jmp	0x97e	; 0x97e <__fp_round>
     9fa:	0e 94 b1 04 	call	0x962	; 0x962 <__fp_pscA>
     9fe:	38 f0       	brcs	.+14     	; 0xa0e <__mulsf3+0x1c>
     a00:	0e 94 b8 04 	call	0x970	; 0x970 <__fp_pscB>
     a04:	20 f0       	brcs	.+8      	; 0xa0e <__mulsf3+0x1c>
     a06:	95 23       	and	r25, r21
     a08:	11 f0       	breq	.+4      	; 0xa0e <__mulsf3+0x1c>
     a0a:	0c 94 a8 04 	jmp	0x950	; 0x950 <__fp_inf>
     a0e:	0c 94 ae 04 	jmp	0x95c	; 0x95c <__fp_nan>
     a12:	11 24       	eor	r1, r1
     a14:	0c 94 f3 04 	jmp	0x9e6	; 0x9e6 <__fp_szero>

00000a18 <__mulsf3x>:
     a18:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <__fp_split3>
     a1c:	70 f3       	brcs	.-36     	; 0x9fa <__mulsf3+0x8>

00000a1e <__mulsf3_pse>:
     a1e:	95 9f       	mul	r25, r21
     a20:	c1 f3       	breq	.-16     	; 0xa12 <__mulsf3+0x20>
     a22:	95 0f       	add	r25, r21
     a24:	50 e0       	ldi	r21, 0x00	; 0
     a26:	55 1f       	adc	r21, r21
     a28:	62 9f       	mul	r22, r18
     a2a:	f0 01       	movw	r30, r0
     a2c:	72 9f       	mul	r23, r18
     a2e:	bb 27       	eor	r27, r27
     a30:	f0 0d       	add	r31, r0
     a32:	b1 1d       	adc	r27, r1
     a34:	63 9f       	mul	r22, r19
     a36:	aa 27       	eor	r26, r26
     a38:	f0 0d       	add	r31, r0
     a3a:	b1 1d       	adc	r27, r1
     a3c:	aa 1f       	adc	r26, r26
     a3e:	64 9f       	mul	r22, r20
     a40:	66 27       	eor	r22, r22
     a42:	b0 0d       	add	r27, r0
     a44:	a1 1d       	adc	r26, r1
     a46:	66 1f       	adc	r22, r22
     a48:	82 9f       	mul	r24, r18
     a4a:	22 27       	eor	r18, r18
     a4c:	b0 0d       	add	r27, r0
     a4e:	a1 1d       	adc	r26, r1
     a50:	62 1f       	adc	r22, r18
     a52:	73 9f       	mul	r23, r19
     a54:	b0 0d       	add	r27, r0
     a56:	a1 1d       	adc	r26, r1
     a58:	62 1f       	adc	r22, r18
     a5a:	83 9f       	mul	r24, r19
     a5c:	a0 0d       	add	r26, r0
     a5e:	61 1d       	adc	r22, r1
     a60:	22 1f       	adc	r18, r18
     a62:	74 9f       	mul	r23, r20
     a64:	33 27       	eor	r19, r19
     a66:	a0 0d       	add	r26, r0
     a68:	61 1d       	adc	r22, r1
     a6a:	23 1f       	adc	r18, r19
     a6c:	84 9f       	mul	r24, r20
     a6e:	60 0d       	add	r22, r0
     a70:	21 1d       	adc	r18, r1
     a72:	82 2f       	mov	r24, r18
     a74:	76 2f       	mov	r23, r22
     a76:	6a 2f       	mov	r22, r26
     a78:	11 24       	eor	r1, r1
     a7a:	9f 57       	subi	r25, 0x7F	; 127
     a7c:	50 40       	sbci	r21, 0x00	; 0
     a7e:	9a f0       	brmi	.+38     	; 0xaa6 <__mulsf3_pse+0x88>
     a80:	f1 f0       	breq	.+60     	; 0xabe <__mulsf3_pse+0xa0>
     a82:	88 23       	and	r24, r24
     a84:	4a f0       	brmi	.+18     	; 0xa98 <__mulsf3_pse+0x7a>
     a86:	ee 0f       	add	r30, r30
     a88:	ff 1f       	adc	r31, r31
     a8a:	bb 1f       	adc	r27, r27
     a8c:	66 1f       	adc	r22, r22
     a8e:	77 1f       	adc	r23, r23
     a90:	88 1f       	adc	r24, r24
     a92:	91 50       	subi	r25, 0x01	; 1
     a94:	50 40       	sbci	r21, 0x00	; 0
     a96:	a9 f7       	brne	.-22     	; 0xa82 <__mulsf3_pse+0x64>
     a98:	9e 3f       	cpi	r25, 0xFE	; 254
     a9a:	51 05       	cpc	r21, r1
     a9c:	80 f0       	brcs	.+32     	; 0xabe <__mulsf3_pse+0xa0>
     a9e:	0c 94 a8 04 	jmp	0x950	; 0x950 <__fp_inf>
     aa2:	0c 94 f3 04 	jmp	0x9e6	; 0x9e6 <__fp_szero>
     aa6:	5f 3f       	cpi	r21, 0xFF	; 255
     aa8:	e4 f3       	brlt	.-8      	; 0xaa2 <__mulsf3_pse+0x84>
     aaa:	98 3e       	cpi	r25, 0xE8	; 232
     aac:	d4 f3       	brlt	.-12     	; 0xaa2 <__mulsf3_pse+0x84>
     aae:	86 95       	lsr	r24
     ab0:	77 95       	ror	r23
     ab2:	67 95       	ror	r22
     ab4:	b7 95       	ror	r27
     ab6:	f7 95       	ror	r31
     ab8:	e7 95       	ror	r30
     aba:	9f 5f       	subi	r25, 0xFF	; 255
     abc:	c1 f7       	brne	.-16     	; 0xaae <__mulsf3_pse+0x90>
     abe:	fe 2b       	or	r31, r30
     ac0:	88 0f       	add	r24, r24
     ac2:	91 1d       	adc	r25, r1
     ac4:	96 95       	lsr	r25
     ac6:	87 95       	ror	r24
     ac8:	97 f9       	bld	r25, 7
     aca:	08 95       	ret

00000acc <pow>:
     acc:	fa 01       	movw	r30, r20
     ace:	ee 0f       	add	r30, r30
     ad0:	ff 1f       	adc	r31, r31
     ad2:	30 96       	adiw	r30, 0x00	; 0
     ad4:	21 05       	cpc	r18, r1
     ad6:	31 05       	cpc	r19, r1
     ad8:	a1 f1       	breq	.+104    	; 0xb42 <pow+0x76>
     ada:	61 15       	cp	r22, r1
     adc:	71 05       	cpc	r23, r1
     ade:	61 f4       	brne	.+24     	; 0xaf8 <pow+0x2c>
     ae0:	80 38       	cpi	r24, 0x80	; 128
     ae2:	bf e3       	ldi	r27, 0x3F	; 63
     ae4:	9b 07       	cpc	r25, r27
     ae6:	49 f1       	breq	.+82     	; 0xb3a <pow+0x6e>
     ae8:	68 94       	set
     aea:	90 38       	cpi	r25, 0x80	; 128
     aec:	81 05       	cpc	r24, r1
     aee:	61 f0       	breq	.+24     	; 0xb08 <pow+0x3c>
     af0:	80 38       	cpi	r24, 0x80	; 128
     af2:	bf ef       	ldi	r27, 0xFF	; 255
     af4:	9b 07       	cpc	r25, r27
     af6:	41 f0       	breq	.+16     	; 0xb08 <pow+0x3c>
     af8:	99 23       	and	r25, r25
     afa:	4a f5       	brpl	.+82     	; 0xb4e <pow+0x82>
     afc:	ff 3f       	cpi	r31, 0xFF	; 255
     afe:	e1 05       	cpc	r30, r1
     b00:	31 05       	cpc	r19, r1
     b02:	21 05       	cpc	r18, r1
     b04:	19 f1       	breq	.+70     	; 0xb4c <pow+0x80>
     b06:	e8 94       	clt
     b08:	08 94       	sec
     b0a:	e7 95       	ror	r30
     b0c:	d9 01       	movw	r26, r18
     b0e:	aa 23       	and	r26, r26
     b10:	29 f4       	brne	.+10     	; 0xb1c <pow+0x50>
     b12:	ab 2f       	mov	r26, r27
     b14:	be 2f       	mov	r27, r30
     b16:	f8 5f       	subi	r31, 0xF8	; 248
     b18:	d0 f3       	brcs	.-12     	; 0xb0e <pow+0x42>
     b1a:	10 c0       	rjmp	.+32     	; 0xb3c <pow+0x70>
     b1c:	ff 5f       	subi	r31, 0xFF	; 255
     b1e:	70 f4       	brcc	.+28     	; 0xb3c <pow+0x70>
     b20:	a6 95       	lsr	r26
     b22:	e0 f7       	brcc	.-8      	; 0xb1c <pow+0x50>
     b24:	f7 39       	cpi	r31, 0x97	; 151
     b26:	50 f0       	brcs	.+20     	; 0xb3c <pow+0x70>
     b28:	19 f0       	breq	.+6      	; 0xb30 <pow+0x64>
     b2a:	ff 3a       	cpi	r31, 0xAF	; 175
     b2c:	38 f4       	brcc	.+14     	; 0xb3c <pow+0x70>
     b2e:	9f 77       	andi	r25, 0x7F	; 127
     b30:	9f 93       	push	r25
     b32:	0d d0       	rcall	.+26     	; 0xb4e <pow+0x82>
     b34:	0f 90       	pop	r0
     b36:	07 fc       	sbrc	r0, 7
     b38:	90 58       	subi	r25, 0x80	; 128
     b3a:	08 95       	ret
     b3c:	46 f0       	brts	.+16     	; 0xb4e <pow+0x82>
     b3e:	0c 94 ae 04 	jmp	0x95c	; 0x95c <__fp_nan>
     b42:	60 e0       	ldi	r22, 0x00	; 0
     b44:	70 e0       	ldi	r23, 0x00	; 0
     b46:	80 e8       	ldi	r24, 0x80	; 128
     b48:	9f e3       	ldi	r25, 0x3F	; 63
     b4a:	08 95       	ret
     b4c:	4f e7       	ldi	r20, 0x7F	; 127
     b4e:	9f 77       	andi	r25, 0x7F	; 127
     b50:	5f 93       	push	r21
     b52:	4f 93       	push	r20
     b54:	3f 93       	push	r19
     b56:	2f 93       	push	r18
     b58:	0e 94 61 06 	call	0xcc2	; 0xcc2 <log>
     b5c:	2f 91       	pop	r18
     b5e:	3f 91       	pop	r19
     b60:	4f 91       	pop	r20
     b62:	5f 91       	pop	r21
     b64:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <__mulsf3>
     b68:	0c 94 be 05 	jmp	0xb7c	; 0xb7c <exp>
     b6c:	29 f4       	brne	.+10     	; 0xb78 <pow+0xac>
     b6e:	16 f0       	brts	.+4      	; 0xb74 <pow+0xa8>
     b70:	0c 94 a8 04 	jmp	0x950	; 0x950 <__fp_inf>
     b74:	0c 94 f2 04 	jmp	0x9e4	; 0x9e4 <__fp_zero>
     b78:	0c 94 ae 04 	jmp	0x95c	; 0x95c <__fp_nan>

00000b7c <exp>:
     b7c:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <__fp_splitA>
     b80:	a8 f3       	brcs	.-22     	; 0xb6c <pow+0xa0>
     b82:	96 38       	cpi	r25, 0x86	; 134
     b84:	a0 f7       	brcc	.-24     	; 0xb6e <pow+0xa2>
     b86:	07 f8       	bld	r0, 7
     b88:	0f 92       	push	r0
     b8a:	e8 94       	clt
     b8c:	2b e3       	ldi	r18, 0x3B	; 59
     b8e:	3a ea       	ldi	r19, 0xAA	; 170
     b90:	48 eb       	ldi	r20, 0xB8	; 184
     b92:	5f e7       	ldi	r21, 0x7F	; 127
     b94:	0e 94 0f 05 	call	0xa1e	; 0xa1e <__mulsf3_pse>
     b98:	0f 92       	push	r0
     b9a:	0f 92       	push	r0
     b9c:	0f 92       	push	r0
     b9e:	4d b7       	in	r20, 0x3d	; 61
     ba0:	5e b7       	in	r21, 0x3e	; 62
     ba2:	0f 92       	push	r0
     ba4:	0e 94 a9 06 	call	0xd52	; 0xd52 <modf>
     ba8:	e4 e5       	ldi	r30, 0x54	; 84
     baa:	f0 e0       	ldi	r31, 0x00	; 0
     bac:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <__fp_powser>
     bb0:	4f 91       	pop	r20
     bb2:	5f 91       	pop	r21
     bb4:	ef 91       	pop	r30
     bb6:	ff 91       	pop	r31
     bb8:	e5 95       	asr	r30
     bba:	ee 1f       	adc	r30, r30
     bbc:	ff 1f       	adc	r31, r31
     bbe:	49 f0       	breq	.+18     	; 0xbd2 <exp+0x56>
     bc0:	fe 57       	subi	r31, 0x7E	; 126
     bc2:	e0 68       	ori	r30, 0x80	; 128
     bc4:	44 27       	eor	r20, r20
     bc6:	ee 0f       	add	r30, r30
     bc8:	44 1f       	adc	r20, r20
     bca:	fa 95       	dec	r31
     bcc:	e1 f7       	brne	.-8      	; 0xbc6 <exp+0x4a>
     bce:	41 95       	neg	r20
     bd0:	55 0b       	sbc	r21, r21
     bd2:	0e 94 23 06 	call	0xc46	; 0xc46 <ldexp>
     bd6:	0f 90       	pop	r0
     bd8:	07 fe       	sbrs	r0, 7
     bda:	0c 94 17 06 	jmp	0xc2e	; 0xc2e <inverse>
     bde:	08 95       	ret

00000be0 <__fp_powser>:
     be0:	df 93       	push	r29
     be2:	cf 93       	push	r28
     be4:	1f 93       	push	r17
     be6:	0f 93       	push	r16
     be8:	ff 92       	push	r15
     bea:	ef 92       	push	r14
     bec:	df 92       	push	r13
     bee:	7b 01       	movw	r14, r22
     bf0:	8c 01       	movw	r16, r24
     bf2:	68 94       	set
     bf4:	06 c0       	rjmp	.+12     	; 0xc02 <__fp_powser+0x22>
     bf6:	da 2e       	mov	r13, r26
     bf8:	ef 01       	movw	r28, r30
     bfa:	0e 94 0c 05 	call	0xa18	; 0xa18 <__mulsf3x>
     bfe:	fe 01       	movw	r30, r28
     c00:	e8 94       	clt
     c02:	a5 91       	lpm	r26, Z+
     c04:	25 91       	lpm	r18, Z+
     c06:	35 91       	lpm	r19, Z+
     c08:	45 91       	lpm	r20, Z+
     c0a:	55 91       	lpm	r21, Z+
     c0c:	a6 f3       	brts	.-24     	; 0xbf6 <__fp_powser+0x16>
     c0e:	ef 01       	movw	r28, r30
     c10:	0e 94 6e 03 	call	0x6dc	; 0x6dc <__addsf3x>
     c14:	fe 01       	movw	r30, r28
     c16:	97 01       	movw	r18, r14
     c18:	a8 01       	movw	r20, r16
     c1a:	da 94       	dec	r13
     c1c:	69 f7       	brne	.-38     	; 0xbf8 <__fp_powser+0x18>
     c1e:	df 90       	pop	r13
     c20:	ef 90       	pop	r14
     c22:	ff 90       	pop	r15
     c24:	0f 91       	pop	r16
     c26:	1f 91       	pop	r17
     c28:	cf 91       	pop	r28
     c2a:	df 91       	pop	r29
     c2c:	08 95       	ret

00000c2e <inverse>:
     c2e:	9b 01       	movw	r18, r22
     c30:	ac 01       	movw	r20, r24
     c32:	60 e0       	ldi	r22, 0x00	; 0
     c34:	70 e0       	ldi	r23, 0x00	; 0
     c36:	80 e8       	ldi	r24, 0x80	; 128
     c38:	9f e3       	ldi	r25, 0x3F	; 63
     c3a:	0c 94 c3 03 	jmp	0x786	; 0x786 <__divsf3>
     c3e:	0c 94 a8 04 	jmp	0x950	; 0x950 <__fp_inf>
     c42:	0c 94 dd 06 	jmp	0xdba	; 0xdba <__fp_mpack>

00000c46 <ldexp>:
     c46:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <__fp_splitA>
     c4a:	d8 f3       	brcs	.-10     	; 0xc42 <inverse+0x14>
     c4c:	99 23       	and	r25, r25
     c4e:	c9 f3       	breq	.-14     	; 0xc42 <inverse+0x14>
     c50:	94 0f       	add	r25, r20
     c52:	51 1d       	adc	r21, r1
     c54:	a3 f3       	brvs	.-24     	; 0xc3e <inverse+0x10>
     c56:	91 50       	subi	r25, 0x01	; 1
     c58:	50 40       	sbci	r21, 0x00	; 0
     c5a:	94 f0       	brlt	.+36     	; 0xc80 <ldexp+0x3a>
     c5c:	59 f0       	breq	.+22     	; 0xc74 <ldexp+0x2e>
     c5e:	88 23       	and	r24, r24
     c60:	32 f0       	brmi	.+12     	; 0xc6e <ldexp+0x28>
     c62:	66 0f       	add	r22, r22
     c64:	77 1f       	adc	r23, r23
     c66:	88 1f       	adc	r24, r24
     c68:	91 50       	subi	r25, 0x01	; 1
     c6a:	50 40       	sbci	r21, 0x00	; 0
     c6c:	c1 f7       	brne	.-16     	; 0xc5e <ldexp+0x18>
     c6e:	9e 3f       	cpi	r25, 0xFE	; 254
     c70:	51 05       	cpc	r21, r1
     c72:	2c f7       	brge	.-54     	; 0xc3e <inverse+0x10>
     c74:	88 0f       	add	r24, r24
     c76:	91 1d       	adc	r25, r1
     c78:	96 95       	lsr	r25
     c7a:	87 95       	ror	r24
     c7c:	97 f9       	bld	r25, 7
     c7e:	08 95       	ret
     c80:	5f 3f       	cpi	r21, 0xFF	; 255
     c82:	ac f0       	brlt	.+42     	; 0xcae <ldexp+0x68>
     c84:	98 3e       	cpi	r25, 0xE8	; 232
     c86:	9c f0       	brlt	.+38     	; 0xcae <ldexp+0x68>
     c88:	bb 27       	eor	r27, r27
     c8a:	86 95       	lsr	r24
     c8c:	77 95       	ror	r23
     c8e:	67 95       	ror	r22
     c90:	b7 95       	ror	r27
     c92:	08 f4       	brcc	.+2      	; 0xc96 <ldexp+0x50>
     c94:	b1 60       	ori	r27, 0x01	; 1
     c96:	93 95       	inc	r25
     c98:	c1 f7       	brne	.-16     	; 0xc8a <ldexp+0x44>
     c9a:	bb 0f       	add	r27, r27
     c9c:	58 f7       	brcc	.-42     	; 0xc74 <ldexp+0x2e>
     c9e:	11 f4       	brne	.+4      	; 0xca4 <ldexp+0x5e>
     ca0:	60 ff       	sbrs	r22, 0
     ca2:	e8 cf       	rjmp	.-48     	; 0xc74 <ldexp+0x2e>
     ca4:	6f 5f       	subi	r22, 0xFF	; 255
     ca6:	7f 4f       	sbci	r23, 0xFF	; 255
     ca8:	8f 4f       	sbci	r24, 0xFF	; 255
     caa:	9f 4f       	sbci	r25, 0xFF	; 255
     cac:	e3 cf       	rjmp	.-58     	; 0xc74 <ldexp+0x2e>
     cae:	0c 94 f3 04 	jmp	0x9e6	; 0x9e6 <__fp_szero>
     cb2:	16 f0       	brts	.+4      	; 0xcb8 <ldexp+0x72>
     cb4:	0c 94 dd 06 	jmp	0xdba	; 0xdba <__fp_mpack>
     cb8:	0c 94 ae 04 	jmp	0x95c	; 0x95c <__fp_nan>
     cbc:	68 94       	set
     cbe:	0c 94 a8 04 	jmp	0x950	; 0x950 <__fp_inf>

00000cc2 <log>:
     cc2:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <__fp_splitA>
     cc6:	a8 f3       	brcs	.-22     	; 0xcb2 <ldexp+0x6c>
     cc8:	99 23       	and	r25, r25
     cca:	c1 f3       	breq	.-16     	; 0xcbc <ldexp+0x76>
     ccc:	ae f3       	brts	.-22     	; 0xcb8 <ldexp+0x72>
     cce:	df 93       	push	r29
     cd0:	cf 93       	push	r28
     cd2:	1f 93       	push	r17
     cd4:	0f 93       	push	r16
     cd6:	ff 92       	push	r15
     cd8:	c9 2f       	mov	r28, r25
     cda:	dd 27       	eor	r29, r29
     cdc:	88 23       	and	r24, r24
     cde:	2a f0       	brmi	.+10     	; 0xcea <log+0x28>
     ce0:	21 97       	sbiw	r28, 0x01	; 1
     ce2:	66 0f       	add	r22, r22
     ce4:	77 1f       	adc	r23, r23
     ce6:	88 1f       	adc	r24, r24
     ce8:	da f7       	brpl	.-10     	; 0xce0 <log+0x1e>
     cea:	20 e0       	ldi	r18, 0x00	; 0
     cec:	30 e0       	ldi	r19, 0x00	; 0
     cee:	40 e8       	ldi	r20, 0x80	; 128
     cf0:	5f eb       	ldi	r21, 0xBF	; 191
     cf2:	9f e3       	ldi	r25, 0x3F	; 63
     cf4:	88 39       	cpi	r24, 0x98	; 152
     cf6:	20 f0       	brcs	.+8      	; 0xd00 <log+0x3e>
     cf8:	80 3e       	cpi	r24, 0xE0	; 224
     cfa:	38 f0       	brcs	.+14     	; 0xd0a <log+0x48>
     cfc:	21 96       	adiw	r28, 0x01	; 1
     cfe:	8f 77       	andi	r24, 0x7F	; 127
     d00:	0e 94 57 03 	call	0x6ae	; 0x6ae <__addsf3>
     d04:	ec e7       	ldi	r30, 0x7C	; 124
     d06:	f0 e0       	ldi	r31, 0x00	; 0
     d08:	04 c0       	rjmp	.+8      	; 0xd12 <log+0x50>
     d0a:	0e 94 57 03 	call	0x6ae	; 0x6ae <__addsf3>
     d0e:	e9 ea       	ldi	r30, 0xA9	; 169
     d10:	f0 e0       	ldi	r31, 0x00	; 0
     d12:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <__fp_powser>
     d16:	8b 01       	movw	r16, r22
     d18:	be 01       	movw	r22, r28
     d1a:	ec 01       	movw	r28, r24
     d1c:	fb 2e       	mov	r15, r27
     d1e:	6f 57       	subi	r22, 0x7F	; 127
     d20:	71 09       	sbc	r23, r1
     d22:	75 95       	asr	r23
     d24:	77 1f       	adc	r23, r23
     d26:	88 0b       	sbc	r24, r24
     d28:	99 0b       	sbc	r25, r25
     d2a:	0e 94 6d 04 	call	0x8da	; 0x8da <__floatsisf>
     d2e:	28 e1       	ldi	r18, 0x18	; 24
     d30:	32 e7       	ldi	r19, 0x72	; 114
     d32:	41 e3       	ldi	r20, 0x31	; 49
     d34:	5f e3       	ldi	r21, 0x3F	; 63
     d36:	0e 94 0c 05 	call	0xa18	; 0xa18 <__mulsf3x>
     d3a:	af 2d       	mov	r26, r15
     d3c:	98 01       	movw	r18, r16
     d3e:	ae 01       	movw	r20, r28
     d40:	ff 90       	pop	r15
     d42:	0f 91       	pop	r16
     d44:	1f 91       	pop	r17
     d46:	cf 91       	pop	r28
     d48:	df 91       	pop	r29
     d4a:	0e 94 6e 03 	call	0x6dc	; 0x6dc <__addsf3x>
     d4e:	0c 94 bf 04 	jmp	0x97e	; 0x97e <__fp_round>

00000d52 <modf>:
     d52:	fa 01       	movw	r30, r20
     d54:	dc 01       	movw	r26, r24
     d56:	aa 0f       	add	r26, r26
     d58:	bb 1f       	adc	r27, r27
     d5a:	9b 01       	movw	r18, r22
     d5c:	ac 01       	movw	r20, r24
     d5e:	bf 57       	subi	r27, 0x7F	; 127
     d60:	28 f4       	brcc	.+10     	; 0xd6c <modf+0x1a>
     d62:	22 27       	eor	r18, r18
     d64:	33 27       	eor	r19, r19
     d66:	44 27       	eor	r20, r20
     d68:	50 78       	andi	r21, 0x80	; 128
     d6a:	20 c0       	rjmp	.+64     	; 0xdac <modf+0x5a>
     d6c:	b7 51       	subi	r27, 0x17	; 23
     d6e:	90 f4       	brcc	.+36     	; 0xd94 <modf+0x42>
     d70:	ab 2f       	mov	r26, r27
     d72:	00 24       	eor	r0, r0
     d74:	46 95       	lsr	r20
     d76:	37 95       	ror	r19
     d78:	27 95       	ror	r18
     d7a:	01 1c       	adc	r0, r1
     d7c:	a3 95       	inc	r26
     d7e:	d2 f3       	brmi	.-12     	; 0xd74 <modf+0x22>
     d80:	00 20       	and	r0, r0
     d82:	71 f0       	breq	.+28     	; 0xda0 <modf+0x4e>
     d84:	22 0f       	add	r18, r18
     d86:	33 1f       	adc	r19, r19
     d88:	44 1f       	adc	r20, r20
     d8a:	b3 95       	inc	r27
     d8c:	da f3       	brmi	.-10     	; 0xd84 <modf+0x32>
     d8e:	0e d0       	rcall	.+28     	; 0xdac <modf+0x5a>
     d90:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__subsf3>
     d94:	61 30       	cpi	r22, 0x01	; 1
     d96:	71 05       	cpc	r23, r1
     d98:	a0 e8       	ldi	r26, 0x80	; 128
     d9a:	8a 07       	cpc	r24, r26
     d9c:	b9 46       	sbci	r27, 0x69	; 105
     d9e:	30 f4       	brcc	.+12     	; 0xdac <modf+0x5a>
     da0:	9b 01       	movw	r18, r22
     da2:	ac 01       	movw	r20, r24
     da4:	66 27       	eor	r22, r22
     da6:	77 27       	eor	r23, r23
     da8:	88 27       	eor	r24, r24
     daa:	90 78       	andi	r25, 0x80	; 128
     dac:	30 96       	adiw	r30, 0x00	; 0
     dae:	21 f0       	breq	.+8      	; 0xdb8 <modf+0x66>
     db0:	20 83       	st	Z, r18
     db2:	31 83       	std	Z+1, r19	; 0x01
     db4:	42 83       	std	Z+2, r20	; 0x02
     db6:	53 83       	std	Z+3, r21	; 0x03
     db8:	08 95       	ret

00000dba <__fp_mpack>:
     dba:	9f 3f       	cpi	r25, 0xFF	; 255
     dbc:	31 f0       	breq	.+12     	; 0xdca <__fp_mpack_finite+0xc>

00000dbe <__fp_mpack_finite>:
     dbe:	91 50       	subi	r25, 0x01	; 1
     dc0:	20 f4       	brcc	.+8      	; 0xdca <__fp_mpack_finite+0xc>
     dc2:	87 95       	ror	r24
     dc4:	77 95       	ror	r23
     dc6:	67 95       	ror	r22
     dc8:	b7 95       	ror	r27
     dca:	88 0f       	add	r24, r24
     dcc:	91 1d       	adc	r25, r1
     dce:	96 95       	lsr	r25
     dd0:	87 95       	ror	r24
     dd2:	97 f9       	bld	r25, 7
     dd4:	08 95       	ret

00000dd6 <sprintf>:
     dd6:	ae e0       	ldi	r26, 0x0E	; 14
     dd8:	b0 e0       	ldi	r27, 0x00	; 0
     dda:	e1 ef       	ldi	r30, 0xF1	; 241
     ddc:	f6 e0       	ldi	r31, 0x06	; 6
     dde:	0c 94 ac 09 	jmp	0x1358	; 0x1358 <__prologue_saves__+0x1c>
     de2:	0d 89       	ldd	r16, Y+21	; 0x15
     de4:	1e 89       	ldd	r17, Y+22	; 0x16
     de6:	86 e0       	ldi	r24, 0x06	; 6
     de8:	8c 83       	std	Y+4, r24	; 0x04
     dea:	1a 83       	std	Y+2, r17	; 0x02
     dec:	09 83       	std	Y+1, r16	; 0x01
     dee:	8f ef       	ldi	r24, 0xFF	; 255
     df0:	9f e7       	ldi	r25, 0x7F	; 127
     df2:	9e 83       	std	Y+6, r25	; 0x06
     df4:	8d 83       	std	Y+5, r24	; 0x05
     df6:	ae 01       	movw	r20, r28
     df8:	47 5e       	subi	r20, 0xE7	; 231
     dfa:	5f 4f       	sbci	r21, 0xFF	; 255
     dfc:	6f 89       	ldd	r22, Y+23	; 0x17
     dfe:	78 8d       	ldd	r23, Y+24	; 0x18
     e00:	ce 01       	movw	r24, r28
     e02:	01 96       	adiw	r24, 0x01	; 1
     e04:	0e 94 0d 07 	call	0xe1a	; 0xe1a <vfprintf>
     e08:	ef 81       	ldd	r30, Y+7	; 0x07
     e0a:	f8 85       	ldd	r31, Y+8	; 0x08
     e0c:	e0 0f       	add	r30, r16
     e0e:	f1 1f       	adc	r31, r17
     e10:	10 82       	st	Z, r1
     e12:	2e 96       	adiw	r28, 0x0e	; 14
     e14:	e4 e0       	ldi	r30, 0x04	; 4
     e16:	0c 94 c8 09 	jmp	0x1390	; 0x1390 <__epilogue_restores__+0x1c>

00000e1a <vfprintf>:
     e1a:	ab e0       	ldi	r26, 0x0B	; 11
     e1c:	b0 e0       	ldi	r27, 0x00	; 0
     e1e:	e3 e1       	ldi	r30, 0x13	; 19
     e20:	f7 e0       	ldi	r31, 0x07	; 7
     e22:	0c 94 9e 09 	jmp	0x133c	; 0x133c <__prologue_saves__>
     e26:	6c 01       	movw	r12, r24
     e28:	7b 01       	movw	r14, r22
     e2a:	8a 01       	movw	r16, r20
     e2c:	fc 01       	movw	r30, r24
     e2e:	17 82       	std	Z+7, r1	; 0x07
     e30:	16 82       	std	Z+6, r1	; 0x06
     e32:	83 81       	ldd	r24, Z+3	; 0x03
     e34:	81 ff       	sbrs	r24, 1
     e36:	cc c1       	rjmp	.+920    	; 0x11d0 <vfprintf+0x3b6>
     e38:	ce 01       	movw	r24, r28
     e3a:	01 96       	adiw	r24, 0x01	; 1
     e3c:	3c 01       	movw	r6, r24
     e3e:	f6 01       	movw	r30, r12
     e40:	93 81       	ldd	r25, Z+3	; 0x03
     e42:	f7 01       	movw	r30, r14
     e44:	93 fd       	sbrc	r25, 3
     e46:	85 91       	lpm	r24, Z+
     e48:	93 ff       	sbrs	r25, 3
     e4a:	81 91       	ld	r24, Z+
     e4c:	7f 01       	movw	r14, r30
     e4e:	88 23       	and	r24, r24
     e50:	09 f4       	brne	.+2      	; 0xe54 <vfprintf+0x3a>
     e52:	ba c1       	rjmp	.+884    	; 0x11c8 <vfprintf+0x3ae>
     e54:	85 32       	cpi	r24, 0x25	; 37
     e56:	39 f4       	brne	.+14     	; 0xe66 <vfprintf+0x4c>
     e58:	93 fd       	sbrc	r25, 3
     e5a:	85 91       	lpm	r24, Z+
     e5c:	93 ff       	sbrs	r25, 3
     e5e:	81 91       	ld	r24, Z+
     e60:	7f 01       	movw	r14, r30
     e62:	85 32       	cpi	r24, 0x25	; 37
     e64:	29 f4       	brne	.+10     	; 0xe70 <vfprintf+0x56>
     e66:	b6 01       	movw	r22, r12
     e68:	90 e0       	ldi	r25, 0x00	; 0
     e6a:	0e 94 04 09 	call	0x1208	; 0x1208 <fputc>
     e6e:	e7 cf       	rjmp	.-50     	; 0xe3e <vfprintf+0x24>
     e70:	91 2c       	mov	r9, r1
     e72:	21 2c       	mov	r2, r1
     e74:	31 2c       	mov	r3, r1
     e76:	ff e1       	ldi	r31, 0x1F	; 31
     e78:	f3 15       	cp	r31, r3
     e7a:	d8 f0       	brcs	.+54     	; 0xeb2 <vfprintf+0x98>
     e7c:	8b 32       	cpi	r24, 0x2B	; 43
     e7e:	79 f0       	breq	.+30     	; 0xe9e <vfprintf+0x84>
     e80:	38 f4       	brcc	.+14     	; 0xe90 <vfprintf+0x76>
     e82:	80 32       	cpi	r24, 0x20	; 32
     e84:	79 f0       	breq	.+30     	; 0xea4 <vfprintf+0x8a>
     e86:	83 32       	cpi	r24, 0x23	; 35
     e88:	a1 f4       	brne	.+40     	; 0xeb2 <vfprintf+0x98>
     e8a:	23 2d       	mov	r18, r3
     e8c:	20 61       	ori	r18, 0x10	; 16
     e8e:	1d c0       	rjmp	.+58     	; 0xeca <vfprintf+0xb0>
     e90:	8d 32       	cpi	r24, 0x2D	; 45
     e92:	61 f0       	breq	.+24     	; 0xeac <vfprintf+0x92>
     e94:	80 33       	cpi	r24, 0x30	; 48
     e96:	69 f4       	brne	.+26     	; 0xeb2 <vfprintf+0x98>
     e98:	23 2d       	mov	r18, r3
     e9a:	21 60       	ori	r18, 0x01	; 1
     e9c:	16 c0       	rjmp	.+44     	; 0xeca <vfprintf+0xb0>
     e9e:	83 2d       	mov	r24, r3
     ea0:	82 60       	ori	r24, 0x02	; 2
     ea2:	38 2e       	mov	r3, r24
     ea4:	e3 2d       	mov	r30, r3
     ea6:	e4 60       	ori	r30, 0x04	; 4
     ea8:	3e 2e       	mov	r3, r30
     eaa:	2a c0       	rjmp	.+84     	; 0xf00 <vfprintf+0xe6>
     eac:	f3 2d       	mov	r31, r3
     eae:	f8 60       	ori	r31, 0x08	; 8
     eb0:	1d c0       	rjmp	.+58     	; 0xeec <vfprintf+0xd2>
     eb2:	37 fc       	sbrc	r3, 7
     eb4:	2d c0       	rjmp	.+90     	; 0xf10 <vfprintf+0xf6>
     eb6:	20 ed       	ldi	r18, 0xD0	; 208
     eb8:	28 0f       	add	r18, r24
     eba:	2a 30       	cpi	r18, 0x0A	; 10
     ebc:	40 f0       	brcs	.+16     	; 0xece <vfprintf+0xb4>
     ebe:	8e 32       	cpi	r24, 0x2E	; 46
     ec0:	b9 f4       	brne	.+46     	; 0xef0 <vfprintf+0xd6>
     ec2:	36 fc       	sbrc	r3, 6
     ec4:	81 c1       	rjmp	.+770    	; 0x11c8 <vfprintf+0x3ae>
     ec6:	23 2d       	mov	r18, r3
     ec8:	20 64       	ori	r18, 0x40	; 64
     eca:	32 2e       	mov	r3, r18
     ecc:	19 c0       	rjmp	.+50     	; 0xf00 <vfprintf+0xe6>
     ece:	36 fe       	sbrs	r3, 6
     ed0:	06 c0       	rjmp	.+12     	; 0xede <vfprintf+0xc4>
     ed2:	8a e0       	ldi	r24, 0x0A	; 10
     ed4:	98 9e       	mul	r9, r24
     ed6:	20 0d       	add	r18, r0
     ed8:	11 24       	eor	r1, r1
     eda:	92 2e       	mov	r9, r18
     edc:	11 c0       	rjmp	.+34     	; 0xf00 <vfprintf+0xe6>
     ede:	ea e0       	ldi	r30, 0x0A	; 10
     ee0:	2e 9e       	mul	r2, r30
     ee2:	20 0d       	add	r18, r0
     ee4:	11 24       	eor	r1, r1
     ee6:	22 2e       	mov	r2, r18
     ee8:	f3 2d       	mov	r31, r3
     eea:	f0 62       	ori	r31, 0x20	; 32
     eec:	3f 2e       	mov	r3, r31
     eee:	08 c0       	rjmp	.+16     	; 0xf00 <vfprintf+0xe6>
     ef0:	8c 36       	cpi	r24, 0x6C	; 108
     ef2:	21 f4       	brne	.+8      	; 0xefc <vfprintf+0xe2>
     ef4:	83 2d       	mov	r24, r3
     ef6:	80 68       	ori	r24, 0x80	; 128
     ef8:	38 2e       	mov	r3, r24
     efa:	02 c0       	rjmp	.+4      	; 0xf00 <vfprintf+0xe6>
     efc:	88 36       	cpi	r24, 0x68	; 104
     efe:	41 f4       	brne	.+16     	; 0xf10 <vfprintf+0xf6>
     f00:	f7 01       	movw	r30, r14
     f02:	93 fd       	sbrc	r25, 3
     f04:	85 91       	lpm	r24, Z+
     f06:	93 ff       	sbrs	r25, 3
     f08:	81 91       	ld	r24, Z+
     f0a:	7f 01       	movw	r14, r30
     f0c:	81 11       	cpse	r24, r1
     f0e:	b3 cf       	rjmp	.-154    	; 0xe76 <vfprintf+0x5c>
     f10:	98 2f       	mov	r25, r24
     f12:	9f 7d       	andi	r25, 0xDF	; 223
     f14:	95 54       	subi	r25, 0x45	; 69
     f16:	93 30       	cpi	r25, 0x03	; 3
     f18:	28 f4       	brcc	.+10     	; 0xf24 <vfprintf+0x10a>
     f1a:	0c 5f       	subi	r16, 0xFC	; 252
     f1c:	1f 4f       	sbci	r17, 0xFF	; 255
     f1e:	9f e3       	ldi	r25, 0x3F	; 63
     f20:	99 83       	std	Y+1, r25	; 0x01
     f22:	0d c0       	rjmp	.+26     	; 0xf3e <vfprintf+0x124>
     f24:	83 36       	cpi	r24, 0x63	; 99
     f26:	31 f0       	breq	.+12     	; 0xf34 <vfprintf+0x11a>
     f28:	83 37       	cpi	r24, 0x73	; 115
     f2a:	71 f0       	breq	.+28     	; 0xf48 <vfprintf+0x12e>
     f2c:	83 35       	cpi	r24, 0x53	; 83
     f2e:	09 f0       	breq	.+2      	; 0xf32 <vfprintf+0x118>
     f30:	59 c0       	rjmp	.+178    	; 0xfe4 <vfprintf+0x1ca>
     f32:	21 c0       	rjmp	.+66     	; 0xf76 <vfprintf+0x15c>
     f34:	f8 01       	movw	r30, r16
     f36:	80 81       	ld	r24, Z
     f38:	89 83       	std	Y+1, r24	; 0x01
     f3a:	0e 5f       	subi	r16, 0xFE	; 254
     f3c:	1f 4f       	sbci	r17, 0xFF	; 255
     f3e:	88 24       	eor	r8, r8
     f40:	83 94       	inc	r8
     f42:	91 2c       	mov	r9, r1
     f44:	53 01       	movw	r10, r6
     f46:	13 c0       	rjmp	.+38     	; 0xf6e <vfprintf+0x154>
     f48:	28 01       	movw	r4, r16
     f4a:	f2 e0       	ldi	r31, 0x02	; 2
     f4c:	4f 0e       	add	r4, r31
     f4e:	51 1c       	adc	r5, r1
     f50:	f8 01       	movw	r30, r16
     f52:	a0 80       	ld	r10, Z
     f54:	b1 80       	ldd	r11, Z+1	; 0x01
     f56:	36 fe       	sbrs	r3, 6
     f58:	03 c0       	rjmp	.+6      	; 0xf60 <vfprintf+0x146>
     f5a:	69 2d       	mov	r22, r9
     f5c:	70 e0       	ldi	r23, 0x00	; 0
     f5e:	02 c0       	rjmp	.+4      	; 0xf64 <vfprintf+0x14a>
     f60:	6f ef       	ldi	r22, 0xFF	; 255
     f62:	7f ef       	ldi	r23, 0xFF	; 255
     f64:	c5 01       	movw	r24, r10
     f66:	0e 94 f9 08 	call	0x11f2	; 0x11f2 <strnlen>
     f6a:	4c 01       	movw	r8, r24
     f6c:	82 01       	movw	r16, r4
     f6e:	f3 2d       	mov	r31, r3
     f70:	ff 77       	andi	r31, 0x7F	; 127
     f72:	3f 2e       	mov	r3, r31
     f74:	16 c0       	rjmp	.+44     	; 0xfa2 <vfprintf+0x188>
     f76:	28 01       	movw	r4, r16
     f78:	22 e0       	ldi	r18, 0x02	; 2
     f7a:	42 0e       	add	r4, r18
     f7c:	51 1c       	adc	r5, r1
     f7e:	f8 01       	movw	r30, r16
     f80:	a0 80       	ld	r10, Z
     f82:	b1 80       	ldd	r11, Z+1	; 0x01
     f84:	36 fe       	sbrs	r3, 6
     f86:	03 c0       	rjmp	.+6      	; 0xf8e <vfprintf+0x174>
     f88:	69 2d       	mov	r22, r9
     f8a:	70 e0       	ldi	r23, 0x00	; 0
     f8c:	02 c0       	rjmp	.+4      	; 0xf92 <vfprintf+0x178>
     f8e:	6f ef       	ldi	r22, 0xFF	; 255
     f90:	7f ef       	ldi	r23, 0xFF	; 255
     f92:	c5 01       	movw	r24, r10
     f94:	0e 94 ee 08 	call	0x11dc	; 0x11dc <strnlen_P>
     f98:	4c 01       	movw	r8, r24
     f9a:	f3 2d       	mov	r31, r3
     f9c:	f0 68       	ori	r31, 0x80	; 128
     f9e:	3f 2e       	mov	r3, r31
     fa0:	82 01       	movw	r16, r4
     fa2:	33 fc       	sbrc	r3, 3
     fa4:	1b c0       	rjmp	.+54     	; 0xfdc <vfprintf+0x1c2>
     fa6:	82 2d       	mov	r24, r2
     fa8:	90 e0       	ldi	r25, 0x00	; 0
     faa:	88 16       	cp	r8, r24
     fac:	99 06       	cpc	r9, r25
     fae:	b0 f4       	brcc	.+44     	; 0xfdc <vfprintf+0x1c2>
     fb0:	b6 01       	movw	r22, r12
     fb2:	80 e2       	ldi	r24, 0x20	; 32
     fb4:	90 e0       	ldi	r25, 0x00	; 0
     fb6:	0e 94 04 09 	call	0x1208	; 0x1208 <fputc>
     fba:	2a 94       	dec	r2
     fbc:	f4 cf       	rjmp	.-24     	; 0xfa6 <vfprintf+0x18c>
     fbe:	f5 01       	movw	r30, r10
     fc0:	37 fc       	sbrc	r3, 7
     fc2:	85 91       	lpm	r24, Z+
     fc4:	37 fe       	sbrs	r3, 7
     fc6:	81 91       	ld	r24, Z+
     fc8:	5f 01       	movw	r10, r30
     fca:	b6 01       	movw	r22, r12
     fcc:	90 e0       	ldi	r25, 0x00	; 0
     fce:	0e 94 04 09 	call	0x1208	; 0x1208 <fputc>
     fd2:	21 10       	cpse	r2, r1
     fd4:	2a 94       	dec	r2
     fd6:	21 e0       	ldi	r18, 0x01	; 1
     fd8:	82 1a       	sub	r8, r18
     fda:	91 08       	sbc	r9, r1
     fdc:	81 14       	cp	r8, r1
     fde:	91 04       	cpc	r9, r1
     fe0:	71 f7       	brne	.-36     	; 0xfbe <vfprintf+0x1a4>
     fe2:	e8 c0       	rjmp	.+464    	; 0x11b4 <vfprintf+0x39a>
     fe4:	84 36       	cpi	r24, 0x64	; 100
     fe6:	11 f0       	breq	.+4      	; 0xfec <vfprintf+0x1d2>
     fe8:	89 36       	cpi	r24, 0x69	; 105
     fea:	41 f5       	brne	.+80     	; 0x103c <vfprintf+0x222>
     fec:	f8 01       	movw	r30, r16
     fee:	37 fe       	sbrs	r3, 7
     ff0:	07 c0       	rjmp	.+14     	; 0x1000 <vfprintf+0x1e6>
     ff2:	60 81       	ld	r22, Z
     ff4:	71 81       	ldd	r23, Z+1	; 0x01
     ff6:	82 81       	ldd	r24, Z+2	; 0x02
     ff8:	93 81       	ldd	r25, Z+3	; 0x03
     ffa:	0c 5f       	subi	r16, 0xFC	; 252
     ffc:	1f 4f       	sbci	r17, 0xFF	; 255
     ffe:	08 c0       	rjmp	.+16     	; 0x1010 <vfprintf+0x1f6>
    1000:	60 81       	ld	r22, Z
    1002:	71 81       	ldd	r23, Z+1	; 0x01
    1004:	07 2e       	mov	r0, r23
    1006:	00 0c       	add	r0, r0
    1008:	88 0b       	sbc	r24, r24
    100a:	99 0b       	sbc	r25, r25
    100c:	0e 5f       	subi	r16, 0xFE	; 254
    100e:	1f 4f       	sbci	r17, 0xFF	; 255
    1010:	f3 2d       	mov	r31, r3
    1012:	ff 76       	andi	r31, 0x6F	; 111
    1014:	3f 2e       	mov	r3, r31
    1016:	97 ff       	sbrs	r25, 7
    1018:	09 c0       	rjmp	.+18     	; 0x102c <vfprintf+0x212>
    101a:	90 95       	com	r25
    101c:	80 95       	com	r24
    101e:	70 95       	com	r23
    1020:	61 95       	neg	r22
    1022:	7f 4f       	sbci	r23, 0xFF	; 255
    1024:	8f 4f       	sbci	r24, 0xFF	; 255
    1026:	9f 4f       	sbci	r25, 0xFF	; 255
    1028:	f0 68       	ori	r31, 0x80	; 128
    102a:	3f 2e       	mov	r3, r31
    102c:	2a e0       	ldi	r18, 0x0A	; 10
    102e:	30 e0       	ldi	r19, 0x00	; 0
    1030:	a3 01       	movw	r20, r6
    1032:	0e 94 40 09 	call	0x1280	; 0x1280 <__ultoa_invert>
    1036:	88 2e       	mov	r8, r24
    1038:	86 18       	sub	r8, r6
    103a:	45 c0       	rjmp	.+138    	; 0x10c6 <vfprintf+0x2ac>
    103c:	85 37       	cpi	r24, 0x75	; 117
    103e:	31 f4       	brne	.+12     	; 0x104c <vfprintf+0x232>
    1040:	23 2d       	mov	r18, r3
    1042:	2f 7e       	andi	r18, 0xEF	; 239
    1044:	b2 2e       	mov	r11, r18
    1046:	2a e0       	ldi	r18, 0x0A	; 10
    1048:	30 e0       	ldi	r19, 0x00	; 0
    104a:	25 c0       	rjmp	.+74     	; 0x1096 <vfprintf+0x27c>
    104c:	93 2d       	mov	r25, r3
    104e:	99 7f       	andi	r25, 0xF9	; 249
    1050:	b9 2e       	mov	r11, r25
    1052:	8f 36       	cpi	r24, 0x6F	; 111
    1054:	c1 f0       	breq	.+48     	; 0x1086 <vfprintf+0x26c>
    1056:	18 f4       	brcc	.+6      	; 0x105e <vfprintf+0x244>
    1058:	88 35       	cpi	r24, 0x58	; 88
    105a:	79 f0       	breq	.+30     	; 0x107a <vfprintf+0x260>
    105c:	b5 c0       	rjmp	.+362    	; 0x11c8 <vfprintf+0x3ae>
    105e:	80 37       	cpi	r24, 0x70	; 112
    1060:	19 f0       	breq	.+6      	; 0x1068 <vfprintf+0x24e>
    1062:	88 37       	cpi	r24, 0x78	; 120
    1064:	21 f0       	breq	.+8      	; 0x106e <vfprintf+0x254>
    1066:	b0 c0       	rjmp	.+352    	; 0x11c8 <vfprintf+0x3ae>
    1068:	e9 2f       	mov	r30, r25
    106a:	e0 61       	ori	r30, 0x10	; 16
    106c:	be 2e       	mov	r11, r30
    106e:	b4 fe       	sbrs	r11, 4
    1070:	0d c0       	rjmp	.+26     	; 0x108c <vfprintf+0x272>
    1072:	fb 2d       	mov	r31, r11
    1074:	f4 60       	ori	r31, 0x04	; 4
    1076:	bf 2e       	mov	r11, r31
    1078:	09 c0       	rjmp	.+18     	; 0x108c <vfprintf+0x272>
    107a:	34 fe       	sbrs	r3, 4
    107c:	0a c0       	rjmp	.+20     	; 0x1092 <vfprintf+0x278>
    107e:	29 2f       	mov	r18, r25
    1080:	26 60       	ori	r18, 0x06	; 6
    1082:	b2 2e       	mov	r11, r18
    1084:	06 c0       	rjmp	.+12     	; 0x1092 <vfprintf+0x278>
    1086:	28 e0       	ldi	r18, 0x08	; 8
    1088:	30 e0       	ldi	r19, 0x00	; 0
    108a:	05 c0       	rjmp	.+10     	; 0x1096 <vfprintf+0x27c>
    108c:	20 e1       	ldi	r18, 0x10	; 16
    108e:	30 e0       	ldi	r19, 0x00	; 0
    1090:	02 c0       	rjmp	.+4      	; 0x1096 <vfprintf+0x27c>
    1092:	20 e1       	ldi	r18, 0x10	; 16
    1094:	32 e0       	ldi	r19, 0x02	; 2
    1096:	f8 01       	movw	r30, r16
    1098:	b7 fe       	sbrs	r11, 7
    109a:	07 c0       	rjmp	.+14     	; 0x10aa <vfprintf+0x290>
    109c:	60 81       	ld	r22, Z
    109e:	71 81       	ldd	r23, Z+1	; 0x01
    10a0:	82 81       	ldd	r24, Z+2	; 0x02
    10a2:	93 81       	ldd	r25, Z+3	; 0x03
    10a4:	0c 5f       	subi	r16, 0xFC	; 252
    10a6:	1f 4f       	sbci	r17, 0xFF	; 255
    10a8:	06 c0       	rjmp	.+12     	; 0x10b6 <vfprintf+0x29c>
    10aa:	60 81       	ld	r22, Z
    10ac:	71 81       	ldd	r23, Z+1	; 0x01
    10ae:	80 e0       	ldi	r24, 0x00	; 0
    10b0:	90 e0       	ldi	r25, 0x00	; 0
    10b2:	0e 5f       	subi	r16, 0xFE	; 254
    10b4:	1f 4f       	sbci	r17, 0xFF	; 255
    10b6:	a3 01       	movw	r20, r6
    10b8:	0e 94 40 09 	call	0x1280	; 0x1280 <__ultoa_invert>
    10bc:	88 2e       	mov	r8, r24
    10be:	86 18       	sub	r8, r6
    10c0:	fb 2d       	mov	r31, r11
    10c2:	ff 77       	andi	r31, 0x7F	; 127
    10c4:	3f 2e       	mov	r3, r31
    10c6:	36 fe       	sbrs	r3, 6
    10c8:	0d c0       	rjmp	.+26     	; 0x10e4 <vfprintf+0x2ca>
    10ca:	23 2d       	mov	r18, r3
    10cc:	2e 7f       	andi	r18, 0xFE	; 254
    10ce:	a2 2e       	mov	r10, r18
    10d0:	89 14       	cp	r8, r9
    10d2:	58 f4       	brcc	.+22     	; 0x10ea <vfprintf+0x2d0>
    10d4:	34 fe       	sbrs	r3, 4
    10d6:	0b c0       	rjmp	.+22     	; 0x10ee <vfprintf+0x2d4>
    10d8:	32 fc       	sbrc	r3, 2
    10da:	09 c0       	rjmp	.+18     	; 0x10ee <vfprintf+0x2d4>
    10dc:	83 2d       	mov	r24, r3
    10de:	8e 7e       	andi	r24, 0xEE	; 238
    10e0:	a8 2e       	mov	r10, r24
    10e2:	05 c0       	rjmp	.+10     	; 0x10ee <vfprintf+0x2d4>
    10e4:	b8 2c       	mov	r11, r8
    10e6:	a3 2c       	mov	r10, r3
    10e8:	03 c0       	rjmp	.+6      	; 0x10f0 <vfprintf+0x2d6>
    10ea:	b8 2c       	mov	r11, r8
    10ec:	01 c0       	rjmp	.+2      	; 0x10f0 <vfprintf+0x2d6>
    10ee:	b9 2c       	mov	r11, r9
    10f0:	a4 fe       	sbrs	r10, 4
    10f2:	0f c0       	rjmp	.+30     	; 0x1112 <vfprintf+0x2f8>
    10f4:	fe 01       	movw	r30, r28
    10f6:	e8 0d       	add	r30, r8
    10f8:	f1 1d       	adc	r31, r1
    10fa:	80 81       	ld	r24, Z
    10fc:	80 33       	cpi	r24, 0x30	; 48
    10fe:	21 f4       	brne	.+8      	; 0x1108 <vfprintf+0x2ee>
    1100:	9a 2d       	mov	r25, r10
    1102:	99 7e       	andi	r25, 0xE9	; 233
    1104:	a9 2e       	mov	r10, r25
    1106:	09 c0       	rjmp	.+18     	; 0x111a <vfprintf+0x300>
    1108:	a2 fe       	sbrs	r10, 2
    110a:	06 c0       	rjmp	.+12     	; 0x1118 <vfprintf+0x2fe>
    110c:	b3 94       	inc	r11
    110e:	b3 94       	inc	r11
    1110:	04 c0       	rjmp	.+8      	; 0x111a <vfprintf+0x300>
    1112:	8a 2d       	mov	r24, r10
    1114:	86 78       	andi	r24, 0x86	; 134
    1116:	09 f0       	breq	.+2      	; 0x111a <vfprintf+0x300>
    1118:	b3 94       	inc	r11
    111a:	a3 fc       	sbrc	r10, 3
    111c:	11 c0       	rjmp	.+34     	; 0x1140 <vfprintf+0x326>
    111e:	a0 fe       	sbrs	r10, 0
    1120:	06 c0       	rjmp	.+12     	; 0x112e <vfprintf+0x314>
    1122:	b2 14       	cp	r11, r2
    1124:	88 f4       	brcc	.+34     	; 0x1148 <vfprintf+0x32e>
    1126:	28 0c       	add	r2, r8
    1128:	92 2c       	mov	r9, r2
    112a:	9b 18       	sub	r9, r11
    112c:	0e c0       	rjmp	.+28     	; 0x114a <vfprintf+0x330>
    112e:	b2 14       	cp	r11, r2
    1130:	60 f4       	brcc	.+24     	; 0x114a <vfprintf+0x330>
    1132:	b6 01       	movw	r22, r12
    1134:	80 e2       	ldi	r24, 0x20	; 32
    1136:	90 e0       	ldi	r25, 0x00	; 0
    1138:	0e 94 04 09 	call	0x1208	; 0x1208 <fputc>
    113c:	b3 94       	inc	r11
    113e:	f7 cf       	rjmp	.-18     	; 0x112e <vfprintf+0x314>
    1140:	b2 14       	cp	r11, r2
    1142:	18 f4       	brcc	.+6      	; 0x114a <vfprintf+0x330>
    1144:	2b 18       	sub	r2, r11
    1146:	02 c0       	rjmp	.+4      	; 0x114c <vfprintf+0x332>
    1148:	98 2c       	mov	r9, r8
    114a:	21 2c       	mov	r2, r1
    114c:	a4 fe       	sbrs	r10, 4
    114e:	10 c0       	rjmp	.+32     	; 0x1170 <vfprintf+0x356>
    1150:	b6 01       	movw	r22, r12
    1152:	80 e3       	ldi	r24, 0x30	; 48
    1154:	90 e0       	ldi	r25, 0x00	; 0
    1156:	0e 94 04 09 	call	0x1208	; 0x1208 <fputc>
    115a:	a2 fe       	sbrs	r10, 2
    115c:	17 c0       	rjmp	.+46     	; 0x118c <vfprintf+0x372>
    115e:	a1 fc       	sbrc	r10, 1
    1160:	03 c0       	rjmp	.+6      	; 0x1168 <vfprintf+0x34e>
    1162:	88 e7       	ldi	r24, 0x78	; 120
    1164:	90 e0       	ldi	r25, 0x00	; 0
    1166:	02 c0       	rjmp	.+4      	; 0x116c <vfprintf+0x352>
    1168:	88 e5       	ldi	r24, 0x58	; 88
    116a:	90 e0       	ldi	r25, 0x00	; 0
    116c:	b6 01       	movw	r22, r12
    116e:	0c c0       	rjmp	.+24     	; 0x1188 <vfprintf+0x36e>
    1170:	8a 2d       	mov	r24, r10
    1172:	86 78       	andi	r24, 0x86	; 134
    1174:	59 f0       	breq	.+22     	; 0x118c <vfprintf+0x372>
    1176:	a1 fe       	sbrs	r10, 1
    1178:	02 c0       	rjmp	.+4      	; 0x117e <vfprintf+0x364>
    117a:	8b e2       	ldi	r24, 0x2B	; 43
    117c:	01 c0       	rjmp	.+2      	; 0x1180 <vfprintf+0x366>
    117e:	80 e2       	ldi	r24, 0x20	; 32
    1180:	a7 fc       	sbrc	r10, 7
    1182:	8d e2       	ldi	r24, 0x2D	; 45
    1184:	b6 01       	movw	r22, r12
    1186:	90 e0       	ldi	r25, 0x00	; 0
    1188:	0e 94 04 09 	call	0x1208	; 0x1208 <fputc>
    118c:	89 14       	cp	r8, r9
    118e:	38 f4       	brcc	.+14     	; 0x119e <vfprintf+0x384>
    1190:	b6 01       	movw	r22, r12
    1192:	80 e3       	ldi	r24, 0x30	; 48
    1194:	90 e0       	ldi	r25, 0x00	; 0
    1196:	0e 94 04 09 	call	0x1208	; 0x1208 <fputc>
    119a:	9a 94       	dec	r9
    119c:	f7 cf       	rjmp	.-18     	; 0x118c <vfprintf+0x372>
    119e:	8a 94       	dec	r8
    11a0:	f3 01       	movw	r30, r6
    11a2:	e8 0d       	add	r30, r8
    11a4:	f1 1d       	adc	r31, r1
    11a6:	80 81       	ld	r24, Z
    11a8:	b6 01       	movw	r22, r12
    11aa:	90 e0       	ldi	r25, 0x00	; 0
    11ac:	0e 94 04 09 	call	0x1208	; 0x1208 <fputc>
    11b0:	81 10       	cpse	r8, r1
    11b2:	f5 cf       	rjmp	.-22     	; 0x119e <vfprintf+0x384>
    11b4:	22 20       	and	r2, r2
    11b6:	09 f4       	brne	.+2      	; 0x11ba <vfprintf+0x3a0>
    11b8:	42 ce       	rjmp	.-892    	; 0xe3e <vfprintf+0x24>
    11ba:	b6 01       	movw	r22, r12
    11bc:	80 e2       	ldi	r24, 0x20	; 32
    11be:	90 e0       	ldi	r25, 0x00	; 0
    11c0:	0e 94 04 09 	call	0x1208	; 0x1208 <fputc>
    11c4:	2a 94       	dec	r2
    11c6:	f6 cf       	rjmp	.-20     	; 0x11b4 <vfprintf+0x39a>
    11c8:	f6 01       	movw	r30, r12
    11ca:	86 81       	ldd	r24, Z+6	; 0x06
    11cc:	97 81       	ldd	r25, Z+7	; 0x07
    11ce:	02 c0       	rjmp	.+4      	; 0x11d4 <vfprintf+0x3ba>
    11d0:	8f ef       	ldi	r24, 0xFF	; 255
    11d2:	9f ef       	ldi	r25, 0xFF	; 255
    11d4:	2b 96       	adiw	r28, 0x0b	; 11
    11d6:	e2 e1       	ldi	r30, 0x12	; 18
    11d8:	0c 94 ba 09 	jmp	0x1374	; 0x1374 <__epilogue_restores__>

000011dc <strnlen_P>:
    11dc:	fc 01       	movw	r30, r24
    11de:	05 90       	lpm	r0, Z+
    11e0:	61 50       	subi	r22, 0x01	; 1
    11e2:	70 40       	sbci	r23, 0x00	; 0
    11e4:	01 10       	cpse	r0, r1
    11e6:	d8 f7       	brcc	.-10     	; 0x11de <strnlen_P+0x2>
    11e8:	80 95       	com	r24
    11ea:	90 95       	com	r25
    11ec:	8e 0f       	add	r24, r30
    11ee:	9f 1f       	adc	r25, r31
    11f0:	08 95       	ret

000011f2 <strnlen>:
    11f2:	fc 01       	movw	r30, r24
    11f4:	61 50       	subi	r22, 0x01	; 1
    11f6:	70 40       	sbci	r23, 0x00	; 0
    11f8:	01 90       	ld	r0, Z+
    11fa:	01 10       	cpse	r0, r1
    11fc:	d8 f7       	brcc	.-10     	; 0x11f4 <strnlen+0x2>
    11fe:	80 95       	com	r24
    1200:	90 95       	com	r25
    1202:	8e 0f       	add	r24, r30
    1204:	9f 1f       	adc	r25, r31
    1206:	08 95       	ret

00001208 <fputc>:
    1208:	0f 93       	push	r16
    120a:	1f 93       	push	r17
    120c:	cf 93       	push	r28
    120e:	df 93       	push	r29
    1210:	fb 01       	movw	r30, r22
    1212:	23 81       	ldd	r18, Z+3	; 0x03
    1214:	21 fd       	sbrc	r18, 1
    1216:	03 c0       	rjmp	.+6      	; 0x121e <fputc+0x16>
    1218:	8f ef       	ldi	r24, 0xFF	; 255
    121a:	9f ef       	ldi	r25, 0xFF	; 255
    121c:	2c c0       	rjmp	.+88     	; 0x1276 <fputc+0x6e>
    121e:	22 ff       	sbrs	r18, 2
    1220:	16 c0       	rjmp	.+44     	; 0x124e <fputc+0x46>
    1222:	46 81       	ldd	r20, Z+6	; 0x06
    1224:	57 81       	ldd	r21, Z+7	; 0x07
    1226:	24 81       	ldd	r18, Z+4	; 0x04
    1228:	35 81       	ldd	r19, Z+5	; 0x05
    122a:	42 17       	cp	r20, r18
    122c:	53 07       	cpc	r21, r19
    122e:	44 f4       	brge	.+16     	; 0x1240 <fputc+0x38>
    1230:	a0 81       	ld	r26, Z
    1232:	b1 81       	ldd	r27, Z+1	; 0x01
    1234:	9d 01       	movw	r18, r26
    1236:	2f 5f       	subi	r18, 0xFF	; 255
    1238:	3f 4f       	sbci	r19, 0xFF	; 255
    123a:	31 83       	std	Z+1, r19	; 0x01
    123c:	20 83       	st	Z, r18
    123e:	8c 93       	st	X, r24
    1240:	26 81       	ldd	r18, Z+6	; 0x06
    1242:	37 81       	ldd	r19, Z+7	; 0x07
    1244:	2f 5f       	subi	r18, 0xFF	; 255
    1246:	3f 4f       	sbci	r19, 0xFF	; 255
    1248:	37 83       	std	Z+7, r19	; 0x07
    124a:	26 83       	std	Z+6, r18	; 0x06
    124c:	14 c0       	rjmp	.+40     	; 0x1276 <fputc+0x6e>
    124e:	8b 01       	movw	r16, r22
    1250:	ec 01       	movw	r28, r24
    1252:	fb 01       	movw	r30, r22
    1254:	00 84       	ldd	r0, Z+8	; 0x08
    1256:	f1 85       	ldd	r31, Z+9	; 0x09
    1258:	e0 2d       	mov	r30, r0
    125a:	09 95       	icall
    125c:	89 2b       	or	r24, r25
    125e:	e1 f6       	brne	.-72     	; 0x1218 <fputc+0x10>
    1260:	d8 01       	movw	r26, r16
    1262:	16 96       	adiw	r26, 0x06	; 6
    1264:	8d 91       	ld	r24, X+
    1266:	9c 91       	ld	r25, X
    1268:	17 97       	sbiw	r26, 0x07	; 7
    126a:	01 96       	adiw	r24, 0x01	; 1
    126c:	17 96       	adiw	r26, 0x07	; 7
    126e:	9c 93       	st	X, r25
    1270:	8e 93       	st	-X, r24
    1272:	16 97       	sbiw	r26, 0x06	; 6
    1274:	ce 01       	movw	r24, r28
    1276:	df 91       	pop	r29
    1278:	cf 91       	pop	r28
    127a:	1f 91       	pop	r17
    127c:	0f 91       	pop	r16
    127e:	08 95       	ret

00001280 <__ultoa_invert>:
    1280:	fa 01       	movw	r30, r20
    1282:	aa 27       	eor	r26, r26
    1284:	28 30       	cpi	r18, 0x08	; 8
    1286:	51 f1       	breq	.+84     	; 0x12dc <__ultoa_invert+0x5c>
    1288:	20 31       	cpi	r18, 0x10	; 16
    128a:	81 f1       	breq	.+96     	; 0x12ec <__ultoa_invert+0x6c>
    128c:	e8 94       	clt
    128e:	6f 93       	push	r22
    1290:	6e 7f       	andi	r22, 0xFE	; 254
    1292:	6e 5f       	subi	r22, 0xFE	; 254
    1294:	7f 4f       	sbci	r23, 0xFF	; 255
    1296:	8f 4f       	sbci	r24, 0xFF	; 255
    1298:	9f 4f       	sbci	r25, 0xFF	; 255
    129a:	af 4f       	sbci	r26, 0xFF	; 255
    129c:	b1 e0       	ldi	r27, 0x01	; 1
    129e:	3e d0       	rcall	.+124    	; 0x131c <__ultoa_invert+0x9c>
    12a0:	b4 e0       	ldi	r27, 0x04	; 4
    12a2:	3c d0       	rcall	.+120    	; 0x131c <__ultoa_invert+0x9c>
    12a4:	67 0f       	add	r22, r23
    12a6:	78 1f       	adc	r23, r24
    12a8:	89 1f       	adc	r24, r25
    12aa:	9a 1f       	adc	r25, r26
    12ac:	a1 1d       	adc	r26, r1
    12ae:	68 0f       	add	r22, r24
    12b0:	79 1f       	adc	r23, r25
    12b2:	8a 1f       	adc	r24, r26
    12b4:	91 1d       	adc	r25, r1
    12b6:	a1 1d       	adc	r26, r1
    12b8:	6a 0f       	add	r22, r26
    12ba:	71 1d       	adc	r23, r1
    12bc:	81 1d       	adc	r24, r1
    12be:	91 1d       	adc	r25, r1
    12c0:	a1 1d       	adc	r26, r1
    12c2:	20 d0       	rcall	.+64     	; 0x1304 <__ultoa_invert+0x84>
    12c4:	09 f4       	brne	.+2      	; 0x12c8 <__ultoa_invert+0x48>
    12c6:	68 94       	set
    12c8:	3f 91       	pop	r19
    12ca:	2a e0       	ldi	r18, 0x0A	; 10
    12cc:	26 9f       	mul	r18, r22
    12ce:	11 24       	eor	r1, r1
    12d0:	30 19       	sub	r19, r0
    12d2:	30 5d       	subi	r19, 0xD0	; 208
    12d4:	31 93       	st	Z+, r19
    12d6:	de f6       	brtc	.-74     	; 0x128e <__ultoa_invert+0xe>
    12d8:	cf 01       	movw	r24, r30
    12da:	08 95       	ret
    12dc:	46 2f       	mov	r20, r22
    12de:	47 70       	andi	r20, 0x07	; 7
    12e0:	40 5d       	subi	r20, 0xD0	; 208
    12e2:	41 93       	st	Z+, r20
    12e4:	b3 e0       	ldi	r27, 0x03	; 3
    12e6:	0f d0       	rcall	.+30     	; 0x1306 <__ultoa_invert+0x86>
    12e8:	c9 f7       	brne	.-14     	; 0x12dc <__ultoa_invert+0x5c>
    12ea:	f6 cf       	rjmp	.-20     	; 0x12d8 <__ultoa_invert+0x58>
    12ec:	46 2f       	mov	r20, r22
    12ee:	4f 70       	andi	r20, 0x0F	; 15
    12f0:	40 5d       	subi	r20, 0xD0	; 208
    12f2:	4a 33       	cpi	r20, 0x3A	; 58
    12f4:	18 f0       	brcs	.+6      	; 0x12fc <__ultoa_invert+0x7c>
    12f6:	49 5d       	subi	r20, 0xD9	; 217
    12f8:	31 fd       	sbrc	r19, 1
    12fa:	40 52       	subi	r20, 0x20	; 32
    12fc:	41 93       	st	Z+, r20
    12fe:	02 d0       	rcall	.+4      	; 0x1304 <__ultoa_invert+0x84>
    1300:	a9 f7       	brne	.-22     	; 0x12ec <__ultoa_invert+0x6c>
    1302:	ea cf       	rjmp	.-44     	; 0x12d8 <__ultoa_invert+0x58>
    1304:	b4 e0       	ldi	r27, 0x04	; 4
    1306:	a6 95       	lsr	r26
    1308:	97 95       	ror	r25
    130a:	87 95       	ror	r24
    130c:	77 95       	ror	r23
    130e:	67 95       	ror	r22
    1310:	ba 95       	dec	r27
    1312:	c9 f7       	brne	.-14     	; 0x1306 <__ultoa_invert+0x86>
    1314:	00 97       	sbiw	r24, 0x00	; 0
    1316:	61 05       	cpc	r22, r1
    1318:	71 05       	cpc	r23, r1
    131a:	08 95       	ret
    131c:	9b 01       	movw	r18, r22
    131e:	ac 01       	movw	r20, r24
    1320:	0a 2e       	mov	r0, r26
    1322:	06 94       	lsr	r0
    1324:	57 95       	ror	r21
    1326:	47 95       	ror	r20
    1328:	37 95       	ror	r19
    132a:	27 95       	ror	r18
    132c:	ba 95       	dec	r27
    132e:	c9 f7       	brne	.-14     	; 0x1322 <__ultoa_invert+0xa2>
    1330:	62 0f       	add	r22, r18
    1332:	73 1f       	adc	r23, r19
    1334:	84 1f       	adc	r24, r20
    1336:	95 1f       	adc	r25, r21
    1338:	a0 1d       	adc	r26, r0
    133a:	08 95       	ret

0000133c <__prologue_saves__>:
    133c:	2f 92       	push	r2
    133e:	3f 92       	push	r3
    1340:	4f 92       	push	r4
    1342:	5f 92       	push	r5
    1344:	6f 92       	push	r6
    1346:	7f 92       	push	r7
    1348:	8f 92       	push	r8
    134a:	9f 92       	push	r9
    134c:	af 92       	push	r10
    134e:	bf 92       	push	r11
    1350:	cf 92       	push	r12
    1352:	df 92       	push	r13
    1354:	ef 92       	push	r14
    1356:	ff 92       	push	r15
    1358:	0f 93       	push	r16
    135a:	1f 93       	push	r17
    135c:	cf 93       	push	r28
    135e:	df 93       	push	r29
    1360:	cd b7       	in	r28, 0x3d	; 61
    1362:	de b7       	in	r29, 0x3e	; 62
    1364:	ca 1b       	sub	r28, r26
    1366:	db 0b       	sbc	r29, r27
    1368:	0f b6       	in	r0, 0x3f	; 63
    136a:	f8 94       	cli
    136c:	de bf       	out	0x3e, r29	; 62
    136e:	0f be       	out	0x3f, r0	; 63
    1370:	cd bf       	out	0x3d, r28	; 61
    1372:	09 94       	ijmp

00001374 <__epilogue_restores__>:
    1374:	2a 88       	ldd	r2, Y+18	; 0x12
    1376:	39 88       	ldd	r3, Y+17	; 0x11
    1378:	48 88       	ldd	r4, Y+16	; 0x10
    137a:	5f 84       	ldd	r5, Y+15	; 0x0f
    137c:	6e 84       	ldd	r6, Y+14	; 0x0e
    137e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1380:	8c 84       	ldd	r8, Y+12	; 0x0c
    1382:	9b 84       	ldd	r9, Y+11	; 0x0b
    1384:	aa 84       	ldd	r10, Y+10	; 0x0a
    1386:	b9 84       	ldd	r11, Y+9	; 0x09
    1388:	c8 84       	ldd	r12, Y+8	; 0x08
    138a:	df 80       	ldd	r13, Y+7	; 0x07
    138c:	ee 80       	ldd	r14, Y+6	; 0x06
    138e:	fd 80       	ldd	r15, Y+5	; 0x05
    1390:	0c 81       	ldd	r16, Y+4	; 0x04
    1392:	1b 81       	ldd	r17, Y+3	; 0x03
    1394:	aa 81       	ldd	r26, Y+2	; 0x02
    1396:	b9 81       	ldd	r27, Y+1	; 0x01
    1398:	ce 0f       	add	r28, r30
    139a:	d1 1d       	adc	r29, r1
    139c:	0f b6       	in	r0, 0x3f	; 63
    139e:	f8 94       	cli
    13a0:	de bf       	out	0x3e, r29	; 62
    13a2:	0f be       	out	0x3f, r0	; 63
    13a4:	cd bf       	out	0x3d, r28	; 61
    13a6:	ed 01       	movw	r28, r26
    13a8:	08 95       	ret

000013aa <_exit>:
    13aa:	f8 94       	cli

000013ac <__stop_program>:
    13ac:	ff cf       	rjmp	.-2      	; 0x13ac <__stop_program>
